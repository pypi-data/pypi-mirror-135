Metadata-Version: 2.1
Name: quala
Version: 0.0.1a0
Summary: Quasi-Newton algorithms and other accelerators
Home-page: https://github.com/tttapa/quala
Author: Pieter P
Author-email: 
License: UNKNOWN
Project-URL: Documentation, https://tttapa.github.io/quala
Project-URL: Source, https://github.com/tttapa/quala
Project-URL: Bug Tracker, https://github.com/tttapa/quala/issues
Keywords: optimization
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy

# quala

Quala implements different accelerators for optimization
solvers, root finders and fixed-point methods, such as Broyden-type quasi-Newton
methods and Anderson acceleration.

The algorithms are implemented in C++, and are available through a Python 
interface.

## Installation

The Python interface can be installed from PyPI using `pip`:
```sh
python3 -m pip install quala
```

Installation instructions for the C++ library can be found in the 
[documentation](https://tttapa.github.io/quala/Doxygen/installation.html).

## Examples and documentation

- [Python Documentation (Sphinx)](https://tttapa.github.io/quala/Sphinx/)
- [C++ Documentation (Doxygen)](https://tttapa.github.io/quala/Doxygen/)
- [Python Examples (Sphinx)](https://tttapa.github.io/quala/Sphinx/examples/)
- [C++ Examples (Doxygen)](https://tttapa.github.io/quala/Doxygen/examples.html)


