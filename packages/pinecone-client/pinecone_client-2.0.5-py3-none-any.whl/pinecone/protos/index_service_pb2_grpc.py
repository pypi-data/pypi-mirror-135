# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pinecone.protos.index_service_pb2 as index__service__pb2

class IndexServiceStub(object):
    """The IndexService interface is for managing Pinecone vector databases
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateIndex = channel.unary_unary(
                '/pinecone.IndexService/CreateIndex',
                request_serializer=index__service__pb2.CreateIndexRequest.SerializeToString,
                response_deserializer=index__service__pb2.CreateIndexResponse.FromString,
                )
        self.DeleteIndex = channel.unary_unary(
                '/pinecone.IndexService/DeleteIndex',
                request_serializer=index__service__pb2.DeleteIndexRequest.SerializeToString,
                response_deserializer=index__service__pb2.DeleteIndexResponse.FromString,
                )
        self.GetIndexStatus = channel.unary_unary(
                '/pinecone.IndexService/GetIndexStatus',
                request_serializer=index__service__pb2.GetIndexStatusRequest.SerializeToString,
                response_deserializer=index__service__pb2.GetIndexStatusResponse.FromString,
                )
        self.ListIndexes = channel.unary_unary(
                '/pinecone.IndexService/ListIndexes',
                request_serializer=index__service__pb2.ListIndexesRequest.SerializeToString,
                response_deserializer=index__service__pb2.ListIndexesResponse.FromString,
                )
        self.DescribeIndex = channel.unary_unary(
                '/pinecone.IndexService/DescribeIndex',
                request_serializer=index__service__pb2.DescribeIndexRequest.SerializeToString,
                response_deserializer=index__service__pb2.DescribeIndexResponse.FromString,
                )
        self.ScaleIndex = channel.unary_unary(
                '/pinecone.IndexService/ScaleIndex',
                request_serializer=index__service__pb2.ScaleIndexRequest.SerializeToString,
                response_deserializer=index__service__pb2.ScaleIndexResponse.FromString,
                )


class IndexServiceServicer(object):
    """The IndexService interface is for managing Pinecone vector databases
    """

    def CreateIndex(self, request, context):
        """The CreateIndex operation creates an index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteIndex(self, request, context):
        """The DeleteIndex operation deletes an index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIndexStatus(self, request, context):
        """The GetIndexStatus operation returns the status of an index.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListIndexes(self, request, context):
        """The ListIndexes operation lists the currently running indexes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeIndex(self, request, context):
        """The DescribeIndex operation returns the details about the index
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ScaleIndex(self, request, context):
        """The ScaleIndex operation increases the number of replicas
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndexServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateIndex,
                    request_deserializer=index__service__pb2.CreateIndexRequest.FromString,
                    response_serializer=index__service__pb2.CreateIndexResponse.SerializeToString,
            ),
            'DeleteIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteIndex,
                    request_deserializer=index__service__pb2.DeleteIndexRequest.FromString,
                    response_serializer=index__service__pb2.DeleteIndexResponse.SerializeToString,
            ),
            'GetIndexStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIndexStatus,
                    request_deserializer=index__service__pb2.GetIndexStatusRequest.FromString,
                    response_serializer=index__service__pb2.GetIndexStatusResponse.SerializeToString,
            ),
            'ListIndexes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListIndexes,
                    request_deserializer=index__service__pb2.ListIndexesRequest.FromString,
                    response_serializer=index__service__pb2.ListIndexesResponse.SerializeToString,
            ),
            'DescribeIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeIndex,
                    request_deserializer=index__service__pb2.DescribeIndexRequest.FromString,
                    response_serializer=index__service__pb2.DescribeIndexResponse.SerializeToString,
            ),
            'ScaleIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.ScaleIndex,
                    request_deserializer=index__service__pb2.ScaleIndexRequest.FromString,
                    response_serializer=index__service__pb2.ScaleIndexResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pinecone.IndexService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class IndexService(object):
    """The IndexService interface is for managing Pinecone vector databases
    """

    @staticmethod
    def CreateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/CreateIndex',
            index__service__pb2.CreateIndexRequest.SerializeToString,
            index__service__pb2.CreateIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/DeleteIndex',
            index__service__pb2.DeleteIndexRequest.SerializeToString,
            index__service__pb2.DeleteIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetIndexStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/GetIndexStatus',
            index__service__pb2.GetIndexStatusRequest.SerializeToString,
            index__service__pb2.GetIndexStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListIndexes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/ListIndexes',
            index__service__pb2.ListIndexesRequest.SerializeToString,
            index__service__pb2.ListIndexesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DescribeIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/DescribeIndex',
            index__service__pb2.DescribeIndexRequest.SerializeToString,
            index__service__pb2.DescribeIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ScaleIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pinecone.IndexService/ScaleIndex',
            index__service__pb2.ScaleIndexRequest.SerializeToString,
            index__service__pb2.ScaleIndexResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
