.. image:: https://github.com/panodata/grafana-pandas-datasource/workflows/Tests/badge.svg
    :target: https://github.com/panodata/grafana-pandas-datasource/actions?workflow=Tests

.. image:: https://img.shields.io/pypi/pyversions/grafana-pandas-datasource.svg
    :target: https://pypi.org/project/grafana-pandas-datasource/

.. image:: https://img.shields.io/pypi/status/grafana-pandas-datasource.svg
    :target: https://pypi.org/project/grafana-pandas-datasource/

.. image:: https://img.shields.io/pypi/v/grafana-pandas-datasource.svg
    :target: https://pypi.org/project/grafana-pandas-datasource/

.. image:: https://img.shields.io/pypi/dm/grafana-pandas-datasource.svg
    :target: https://pypi.org/project/grafana-pandas-datasource/

.. image:: https://img.shields.io/pypi/l/grafana-pandas-datasource.svg
    :target: https://github.com/panodata/grafana-pandas-datasource/blob/main/LICENSE

.. image:: https://img.shields.io/badge/Grafana-6.x%20--%208.x-blue.svg
    :target: https://github.com/grafana/grafana
    :alt: Supported Grafana versions

|

#########################
Grafana pandas datasource
#########################


*****
About
*****

A HTTP API based on Flask_ for serving pandas_ data frames to Grafana_,
generated by NumPy_. The `Grafana Simple JSON Datasource`_ is used to interface
Grafana with the HTTP API.

This way, a native Python application can be used to directly supply data to
Grafana easily and powerfully.

The framework supports feeding both timeseries data as well as annotations
through corresponding ``/query`` and ``/annotations`` endpoints and also
provides ``/search`` and ``/panels`` endpoints.


*******************
Sandbox environment
*******************

In order to work efficiently with the resources provided by this repository, we
recommend to install some programs upfront. This will optimally work on Linux
and macOS. Windows users might use the WSL subsystem.

Install prerequisites::

    # Debian Linux
    apt install git python3 python3-pip httpie docker.io
    pip install poetry

    # macOS / Homebrew
    brew install git python3 poetry httpie docker

Acquire sources and bootstrap sandbox environment::

    git clone https://github.com/panodata/grafana-pandas-datasource
    cd grafana-pandas-datasource
    poetry install
    poetry shell

Test drive::

    # Run Grafana pandas datasource demo.
    python examples/sinewave-midnights/demo.py

    # Submit a timeseries data request.
    echo '{"targets": [{"target": "sine_wave:24"}], "range": {"from": "2022-02-22T15", "to": "2022-02-22T20"}}' | http http://127.0.0.1:3003/query

    # Submit an annotation data request.
    echo '{"annotation": {"query": "midnights:xx"}, "range": {"from": "2022-02-20", "to": "2022-02-22"}}' | http http://127.0.0.1:3003/annotations

When the environment has been properly configured, both requests above will
yield appropriate responses.


********
Examples
********

There are `different demo programs`_ accompanied with Grafana datasource and
dashboard definition files. 

After confirming the sandbox environment has been installed successfully,
please head over to the `Sinewave/Midnights example`_ page in order to learn
how to provision Grafana with corresponding resources.


*****
Setup
*****

When aiming to run a dedicated service, without needing to invoke the examples,
you can add the package ``grafana-pandas-datasource`` to the list of your
project requirements.

::

    pip install grafana-pandas-datasource


*******
Credits
*******

Kudos to Linar, who conceived the initial version of this software the other
day at https://gist.github.com/linar-jether/95ff412f9d19fdf5e51293eb0c09b850.


.. _different demo programs: https://github.com/panodata/grafana-pandas-datasource/tree/main/examples
.. _Flask: https://github.com/pallets/flask
.. _Grafana: https://github.com/grafana/grafana
.. _Grafana Simple JSON Datasource: https://grafana.com/grafana/plugins/grafana-simple-json-datasource/
.. _NumPy: https://numpy.org/
.. _pandas: https://github.com/pandas-dev/pandas
.. _Sinewave/Midnights example: https://github.com/panodata/grafana-pandas-datasource/tree/main/examples/sinewave-midnights
