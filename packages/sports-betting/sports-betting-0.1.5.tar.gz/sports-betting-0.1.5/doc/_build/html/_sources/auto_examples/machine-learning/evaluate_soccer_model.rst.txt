
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/machine-learning/evaluate_soccer_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_machine-learning_evaluate_soccer_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_machine-learning_evaluate_soccer_model.py:


================
Model evaluation
================

This example illustrates how to evaluate a model's performance 
on soccer historical data.

.. GENERATED FROM PYTHON SOURCE LINES 9-17

.. code-block:: default


    # Author: Georgios Douzas <gdouzas@icloud.com>
    # Licence: MIT

    import numpy as np
    from sportsbet.datasets import SoccerDataLoader
    from sklearn.neighbors import KNeighborsClassifier








.. GENERATED FROM PYTHON SOURCE LINES 18-20

Extracting the training data
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 22-24

We extract the training data for the spanish league. We also remove any
missing values and select the market maximum odds.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: default


    dataloader = SoccerDataLoader(param_grid={'league': ['Spain']})
    X_train, Y_train, Odds_train = dataloader.extract_train_data(
        drop_na_thres=1.0, odds_type='market_maximum'
    )





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Football-Data.co.uk: ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 0:00:00




.. GENERATED FROM PYTHON SOURCE LINES 31-32

The input data:

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    X_train






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>home_team</th>
          <th>away_team</th>
          <th>league</th>
          <th>division</th>
          <th>year</th>
          <th>home_team_soccer_power_index</th>
          <th>away_team_soccer_power_index</th>
          <th>home_team_probability_win</th>
          <th>away_team_probability_win</th>
          <th>probability_draw</th>
          <th>home_team_projected_score</th>
          <th>away_team_projected_score</th>
          <th>match_quality</th>
        </tr>
        <tr>
          <th>date</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2016-08-19</th>
          <td>Malaga</td>
          <td>Osasuna</td>
          <td>Spain</td>
          <td>1</td>
          <td>2017</td>
          <td>72.57</td>
          <td>56.93</td>
          <td>0.5475</td>
          <td>0.1897</td>
          <td>0.2628</td>
          <td>1.56</td>
          <td>0.70</td>
          <td>63.805561</td>
        </tr>
        <tr>
          <th>2016-08-19</th>
          <td>La Coruna</td>
          <td>Eibar</td>
          <td>Spain</td>
          <td>1</td>
          <td>2017</td>
          <td>66.52</td>
          <td>62.29</td>
          <td>0.5003</td>
          <td>0.2260</td>
          <td>0.2738</td>
          <td>1.47</td>
          <td>0.79</td>
          <td>64.335545</td>
        </tr>
        <tr>
          <th>2016-08-20</th>
          <td>Barcelona</td>
          <td>Betis</td>
          <td>Spain</td>
          <td>1</td>
          <td>2017</td>
          <td>96.35</td>
          <td>69.95</td>
          <td>0.9591</td>
          <td>0.0071</td>
          <td>0.0337</td>
          <td>3.40</td>
          <td>0.42</td>
          <td>81.054510</td>
        </tr>
        <tr>
          <th>2016-08-20</th>
          <td>Sevilla</td>
          <td>Espanol</td>
          <td>Spain</td>
          <td>1</td>
          <td>2017</td>
          <td>78.76</td>
          <td>68.75</td>
          <td>0.5952</td>
          <td>0.1760</td>
          <td>0.2288</td>
          <td>1.89</td>
          <td>0.88</td>
          <td>73.415362</td>
        </tr>
        <tr>
          <th>2016-08-20</th>
          <td>Granada</td>
          <td>Villarreal</td>
          <td>Spain</td>
          <td>1</td>
          <td>2017</td>
          <td>55.69</td>
          <td>76.79</td>
          <td>0.3194</td>
          <td>0.3917</td>
          <td>0.2889</td>
          <td>1.07</td>
          <td>1.19</td>
          <td>64.559709</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>2021-12-19</th>
          <td>Fuenlabrada</td>
          <td>Oviedo</td>
          <td>Spain</td>
          <td>2</td>
          <td>2022</td>
          <td>23.93</td>
          <td>34.47</td>
          <td>0.3181</td>
          <td>0.3483</td>
          <td>0.3336</td>
          <td>0.97</td>
          <td>1.03</td>
          <td>28.248873</td>
        </tr>
        <tr>
          <th>2021-12-19</th>
          <td>Ponferradina</td>
          <td>Amorebieta</td>
          <td>Spain</td>
          <td>2</td>
          <td>2022</td>
          <td>32.85</td>
          <td>25.44</td>
          <td>0.4926</td>
          <td>0.2281</td>
          <td>0.2793</td>
          <td>1.53</td>
          <td>0.95</td>
          <td>28.674009</td>
        </tr>
        <tr>
          <th>2021-12-31</th>
          <td>Burgos</td>
          <td>Amorebieta</td>
          <td>Spain</td>
          <td>2</td>
          <td>2022</td>
          <td>25.64</td>
          <td>25.98</td>
          <td>0.3896</td>
          <td>0.3090</td>
          <td>0.3014</td>
          <td>1.26</td>
          <td>1.09</td>
          <td>25.808880</td>
        </tr>
        <tr>
          <th>2021-12-31</th>
          <td>Oviedo</td>
          <td>Ponferradina</td>
          <td>Spain</td>
          <td>2</td>
          <td>2022</td>
          <td>34.04</td>
          <td>32.07</td>
          <td>0.4257</td>
          <td>0.2608</td>
          <td>0.3135</td>
          <td>1.24</td>
          <td>0.91</td>
          <td>33.025648</td>
        </tr>
        <tr>
          <th>2021-12-31</th>
          <td>Eibar</td>
          <td>Sociedad B</td>
          <td>Spain</td>
          <td>2</td>
          <td>2022</td>
          <td>35.73</td>
          <td>25.54</td>
          <td>0.5271</td>
          <td>0.2011</td>
          <td>0.2718</td>
          <td>1.60</td>
          <td>0.88</td>
          <td>29.787635</td>
        </tr>
      </tbody>
    </table>
    <p>2724 rows × 13 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 35-36

The targets:

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: default

    Y_train






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>away_win__full_time_goals</th>
          <th>draw__full_time_goals</th>
          <th>home_win__full_time_goals</th>
          <th>over_2.5__full_time_goals</th>
          <th>under_2.5__full_time_goals</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
        </tr>
        <tr>
          <th>1</th>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>2</th>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>3</th>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>4</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>2719</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
        </tr>
        <tr>
          <th>2720</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>False</td>
          <td>True</td>
        </tr>
        <tr>
          <th>2721</th>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>True</td>
          <td>False</td>
        </tr>
        <tr>
          <th>2722</th>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>False</td>
          <td>True</td>
        </tr>
        <tr>
          <th>2723</th>
          <td>False</td>
          <td>False</td>
          <td>True</td>
          <td>True</td>
          <td>False</td>
        </tr>
      </tbody>
    </table>
    <p>2724 rows × 5 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-41

Splitting the data
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 43-46

We split the training data into training and testing data by keeping the
first 80% of observations as training data, since the data are already
sorted by date.

.. GENERATED FROM PYTHON SOURCE LINES 46-51

.. code-block:: default


    ind = int(len(X_train) * 0.80)
    X_test, Y_test, Odds_test = X_train[ind:], Y_train[ind:], Odds_train[ind:]
    X_train, Y_train = X_train[:ind], Y_train[:ind]








.. GENERATED FROM PYTHON SOURCE LINES 52-54

Training a multi-output classifier
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 56-58

We train a :class:`~sklearn.neighbors.KNeighborsClassifier` using only numerical
features from the input data. We also use the extracted targets.

.. GENERATED FROM PYTHON SOURCE LINES 58-67

.. code-block:: default


    num_features = [
        col
        for col in X_train.columns
        if X_train[col].dtype in (np.dtype(int), np.dtype(float))
    ]
    clf = KNeighborsClassifier()
    clf.fit(X_train[num_features], Y_train)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    KNeighborsClassifier()



.. GENERATED FROM PYTHON SOURCE LINES 68-70

Estimating the value bets
##############################################################################

.. GENERATED FROM PYTHON SOURCE LINES 72-73

We can estimate the value bets by using the fitted classifier.

.. GENERATED FROM PYTHON SOURCE LINES 73-80

.. code-block:: default


    Y_pred_prob = np.concatenate(
        [prob[:, 1].reshape(-1, 1) for prob in clf.predict_proba(X_test[num_features])],
        axis=1,
    )
    value_bets = Y_pred_prob * Odds_test > 1








.. GENERATED FROM PYTHON SOURCE LINES 81-83

We assume that we bet an amount of +1 in every value bet. Then we have the
following mean profit per bet:

.. GENERATED FROM PYTHON SOURCE LINES 83-86

.. code-block:: default


    profit = np.nanmean((Y_test.values * Odds_test.values - 1) * value_bets.values)
    profit




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    -0.013812844036697245




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  45.232 seconds)


.. _sphx_glr_download_auto_examples_machine-learning_evaluate_soccer_model.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: evaluate_soccer_model.py <evaluate_soccer_model.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: evaluate_soccer_model.ipynb <evaluate_soccer_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
