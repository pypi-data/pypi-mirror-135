define("serialhub",["@jupyter-widgets/base"],(t=>(()=>{var e={150:(t,e,n)=>{"use strict";n.d(e,{Z:()=>l});var s=n(925),i=n.n(s),o=n(495),r=n.n(o)()(i());r.push([t.id,'.xx-serialhub-widget {\n  padding: 1px 1px;\n}\n.xx-serialhub-status {\n  background-color: lightseagreen;\n  border: 1px solid lightcoral;\n  padding: 2px 4px 1px;\n  font-weight: bold;\n  min-height: 12px;\n}\n.xx-serialhub-prompt {\n  font-style: italic;\n  padding-left: 6px;\n}\n.xx-serialhub-value {\n  white-space: pre-wrap;\n  font-weight: normal;\n  font-family: "Lucida Console", Courier, monospace;\n  min-height: 10px;\n  max-height: 10em;\n}\n.xx-serialhub-stats {\n  padding: 1px 10px 1px;\n  font-weight: normal;\n  font-style: italic;\n  min-height: 10px;\n}',"",{version:3,sources:["webpack://./style/base.css"],names:[],mappings:"AAAA;EACE,gBAAgB;AAClB;AACA;EACE,+BAA+B;EAC/B,4BAA4B;EAC5B,oBAAoB;EACpB,iBAAiB;EACjB,gBAAgB;AAClB;AACA;EACE,kBAAkB;EAClB,iBAAiB;AACnB;AACA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,iDAAiD;EACjD,gBAAgB;EAChB,gBAAgB;AAClB;AACA;EACE,qBAAqB;EACrB,mBAAmB;EACnB,kBAAkB;EAClB,gBAAgB;AAClB",sourcesContent:['.xx-serialhub-widget {\n  padding: 1px 1px;\n}\n.xx-serialhub-status {\n  background-color: lightseagreen;\n  border: 1px solid lightcoral;\n  padding: 2px 4px 1px;\n  font-weight: bold;\n  min-height: 12px;\n}\n.xx-serialhub-prompt {\n  font-style: italic;\n  padding-left: 6px;\n}\n.xx-serialhub-value {\n  white-space: pre-wrap;\n  font-weight: normal;\n  font-family: "Lucida Console", Courier, monospace;\n  min-height: 10px;\n  max-height: 10em;\n}\n.xx-serialhub-stats {\n  padding: 1px 10px 1px;\n  font-weight: normal;\n  font-style: italic;\n  min-height: 10px;\n}'],sourceRoot:""}]);const l=r},760:(t,e,n)=>{"use strict";n.d(e,{Z:()=>c});var s=n(925),i=n.n(s),o=n(495),r=n.n(o),l=n(150),a=r()(i());a.i(l.Z),a.push([t.id,"\n","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const c=a},495:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",s=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),s&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),s&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,s,i,o){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(s)for(var l=0;l<this.length;l++){var a=this[l][0];null!=a&&(r[a]=!0)}for(var c=0;c<t.length;c++){var u=[].concat(t[c]);s&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),i&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=i):u[4]="".concat(i)),e.push(u))}},e}},925:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),o="/*# ".concat(i," */"),r=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(r).concat([o]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,s=0;s<e.length;s++)if(e[s].identifier===t){n=s;break}return n}function s(t,s){for(var o={},r=[],l=0;l<t.length;l++){var a=t[l],c=s.base?a[0]+s.base:a[0],u=o[c]||0,p="".concat(c," ").concat(u);o[c]=u+1;var d=n(p),h={css:a[1],media:a[2],sourceMap:a[3],supports:a[4],layer:a[5]};if(-1!==d)e[d].references++,e[d].updater(h);else{var _=i(h,s);s.byIndex=l,e.splice(l,0,{identifier:p,updater:_,references:1})}r.push(p)}return r}function i(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,i){var o=s(t=t||[],i=i||{});return function(t){t=t||[];for(var r=0;r<o.length;r++){var l=n(o[r]);e[l].references--}for(var a=s(t,i),c=0;c<o.length;c++){var u=n(o[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}o=a}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var s=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var s="";n.supports&&(s+="@supports (".concat(n.supports,") {")),n.media&&(s+="@media ".concat(n.media," {"));var i=void 0!==n.layer;i&&(s+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),s+=n.css,i&&(s+="}"),n.media&&(s+="}"),n.supports&&(s+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(s,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},146:e=>{"use strict";e.exports=t},173:()=>{},147:t=>{"use strict";t.exports=JSON.parse('{"name":"serialhub","version":"0.0.37","description":"WebSerial widget for JupyterLab","keywords":["jupyter","jupyterlab","jupyterlab-extension","widgets"],"homepage":"https://github.com/cdr4eelz/serialhub","bugs":{"url":"https://github.com/cdr4eelz/serialhub/issues"},"license":"BSD-3-Clause","author":{"name":"cdr4eelz","email":"1408777+cdr4eelz@users.noreply.github.com"},"files":["lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf}","style/**/*.{css,js,eot,gif,html,jpg,json,png,svg,woff2,ttf}","schema/*.json"],"main":"lib/index.js","types":"lib/index.d.ts","style":"style/index.css","repository":{"type":"git","url":"https://github.com/cdr4eelz/serialhub.git"},"scripts":{"build":"jlpm run build:lib && jlpm run build:labextension:dev","build:prod":"jlpm run clean && jlpm run build:lib && jlpm run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","build:nbextension":"webpack --node-env production","build:all":"jlpm run build:lib && jlpm run build:labextension:dev && jlpm run build:nbextension","webpack:help":"webpack --help","webpack:version":"webpack -v","test":"jlpm run test:pytest","test:pytest":"pytest -v","coverage":"jlpm run coverage:pytest","coverage:pytest":"pytest -vv --cov=serialhub --cov-report=term-missing serialhub/tests/","clean":"jlpm run clean:lib","clean:lib":"rimraf lib tsconfig.tsbuildinfo","clean:labextension":"rimraf serialhub/labextension","clean:nbextension":"rimraf serialhub/nbextension/static/index.js","clean:all":"jlpm run clean:lib && jlpm run clean:labextension && jlpm run clean:nbextension","eslint":"eslint . --ext .ts,.tsx --fix","eslint:check":"eslint . --ext .ts,.tsx","pylint":"pylint -v serialhub/","lint":"jlpm run lint:all","lint:all":"jlpm run eslint:check && jlpm run pylint","install:extension":"jlpm run build","watch":"run-p watch:src watch:labextension","watch:src":"tsc -w","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^2 || ^3 || ^4","@jupyterlab/application":"^3.1.0","@jupyterlab/coreutils":"^5.1.0","@jupyterlab/services":"^6.1.0","@lumino/coreutils":"^1.5.3","@lumino/widgets":"^1.19.0","lodash":"^4.17.21","minimist":"^1.2.5"},"devDependencies":{"@jupyterlab/builder":"~3.2.6","@types/backbone":"~1.4.15","@typescript-eslint/eslint-plugin":"^5.9.0","@typescript-eslint/parser":"^5.9.0","css-loader":"^6.5.1","eslint":"^8.6.0","eslint-config-prettier":"^6.15.0","eslint-plugin-prettier":"^3.1.4","mkdirp":"^1.0.4","npm-run-all":"^4.1.5","postcss":"^8.2.13","prettier":"^2.5.1","react":"^17.0.1","rimraf":"^3.0.2","source-map-loader":"^0.2.4","style-loader":"^3.3.1","ts-loader":"^9.2.6","typanion":"~3.7.1","typescript":"~4.2","webpack":"^5.65","webpack-cli":"^4.9.1","yjs":"^13.5.17"},"sideEffects":["style/*.css","style/index.js"],"styleModule":"style/index.js","publishConfig":{"access":"public"},"jupyterlab":{"sharedPackages":{"@jupyter-widgets/base":{"bundled":false,"singleton":true}},"discovery":{"server":{"managers":["pip"],"base":{"name":"serialhub"}}},"extension":"lib/plugin","outputDir":"serialhub/labextension"},"jupyter-releaser":{"hooks":{"before-build-npm":["python -m pip install jupyterlab~=3.1","jlpm"]}}}')}},n={};function s(t){var i=n[t];if(void 0!==i)return i.exports;var o=n[t]={id:t,exports:{}};return e[t](o,o.exports,s),o.exports}s.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return s.d(e,{a:e}),e},s.d=(t,e)=>{for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),s.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{"use strict";s.r(i),s.d(i,{MODULE_NAME:()=>n,MODULE_VERSION:()=>e,SerialHubModel:()=>j,SerialHubPort:()=>A,SerialHubView:()=>E,default:()=>k});const t=s(147),e=t.version,n=t.name;var o,r,l,a=s(146),c=s(379),u=s.n(c),p=s(795),d=s.n(p),h=s(569),_=s.n(h),m=s(565),g=s.n(m),f=s(216),b=s.n(f),v=s(589),y=s.n(v),w=s(760),x={};x.styleTagTransform=y(),x.setAttributes=g(),x.insert=_().bind(null,"head"),x.domAPI=d(),x.insertStyleElement=b(),u()(w.Z,x),w.Z&&w.Z.locals&&w.Z.locals,function(t){function e(t){return null===t||"boolean"==typeof t||"number"==typeof t||"string"==typeof t}function n(t){return Array.isArray(t)}t.emptyObject=Object.freeze({}),t.emptyArray=Object.freeze([]),t.isPrimitive=e,t.isArray=n,t.isObject=function(t){return!e(t)&&!n(t)},t.deepEqual=function t(s,i){if(s===i)return!0;if(e(s)||e(i))return!1;var o=n(s),r=n(i);return o===r&&(o&&r?function(e,n){if(e===n)return!0;if(e.length!==n.length)return!1;for(var s=0,i=e.length;s<i;++s)if(!t(e[s],n[s]))return!1;return!0}(s,i):function(e,n){if(e===n)return!0;for(var s in e)if(void 0!==e[s]&&!(s in n))return!1;for(var s in n)if(void 0!==n[s]&&!(s in e))return!1;for(var s in e){var i=e[s],o=n[s];if(void 0!==i||void 0!==o){if(void 0===i||void 0===o)return!1;if(!t(i,o))return!1}}return!0}(s,i))},t.deepCopy=function t(s){return e(s)?s:n(s)?function(e){for(var n=new Array(e.length),s=0,i=e.length;s<i;++s)n[s]=t(e[s]);return n}(s):function(e){var n={};for(var s in e){var i=e[s];void 0!==i&&(n[s]=t(i))}return n}(s)}}(o||(o={})),function(){function t(){this._types=[],this._values=[]}t.prototype.types=function(){return this._types.slice()},t.prototype.hasData=function(t){return-1!==this._types.indexOf(t)},t.prototype.getData=function(t){var e=this._types.indexOf(t);return-1!==e?this._values[e]:void 0},t.prototype.setData=function(t,e){this.clearData(t),this._types.push(t),this._values.push(e)},t.prototype.clearData=function(t){var e=this._types.indexOf(t);-1!==e&&(this._types.splice(e,1),this._values.splice(e,1))},t.prototype.clear=function(){this._types.length=0,this._values.length=0}}(),function(){function t(){var t=this;this.promise=new Promise((function(e,n){t._resolve=e,t._reject=n}))}t.prototype.resolve=function(t){(0,this._resolve)(t)},t.prototype.reject=function(t){(0,this._reject)(t)}}(),function(t){var e;t.getRandomValues=(e="undefined"!=typeof window&&(window.crypto||window.msCrypto)||s(173)||null)&&"function"==typeof e.getRandomValues?function(t){return e.getRandomValues(t)}:e&&"function"==typeof e.randomFillSync?function(t){return e.randomFillSync(t)}:e&&"function"==typeof e.randomBytes?function(t){for(var n=e.randomBytes(t.length),s=0,i=n.length;s<i;++s)t[s]=n[s]}:function(t){for(var e=0,n=0,s=t.length;n<s;++n)n%4==0&&(e=4294967295*Math.random()>>>0),t[n]=255&e,e>>>=8}}(r||(r={})),function(t){t.uuid4=function(){for(var t=new Uint8Array(16),e=new Array(256),n=0;n<16;++n)e[n]="0"+n.toString(16);for(n=16;n<256;++n)e[n]=n.toString(16);return function(){return r.getRandomValues(t),t[6]=64|15&t[6],t[8]=128|63&t[8],e[t[0]]+e[t[1]]+e[t[2]]+e[t[3]]+"-"+e[t[4]]+e[t[5]]+"-"+e[t[6]]+e[t[7]]+"-"+e[t[8]]+e[t[9]]+"-"+e[t[10]]+e[t[11]]+e[t[12]]+e[t[13]]+e[t[14]]+e[t[15]]}}()}(l||(l={}));class A{constructor(){this.port=null,this.writer=null,this.reader=null}async connect(t,e){const n=window.navigator;if(!n||!n.serial)throw new TypeError("Web Serial API not supported");if(this.port)throw new TypeError("WebSerial port is already connected");const s=await n.serial.requestPort(t);if(!s)throw new TypeError("FAILED request a port from user");console.log("OPENING PORT:",s,s.getInfo()),this.port=s,await this.port.open(e),this.writer=this.port.writable.getWriter(),this.reader=this.port.readable.getReader(),console.log("CONNECTED: ",this,this.port,this.port.getInfo())}async disconnect(){var t,e,n;console.log("CLOSE: ",this);try{await(null===(t=this.reader)||void 0===t?void 0:t.cancel("Closing port"))}catch(t){console.error("Ignoring error while closing readable",t)}finally{this.reader=null}try{await(null===(e=this.writer)||void 0===e?void 0:e.close())}catch(t){console.error("Ignoring error while closing writable",t)}finally{this.writer=null}try{await(null===(n=this.port)||void 0===n?void 0:n.close())}finally{this.port=null}}writeToStream(t){if(!this.writer)throw new TypeError("Stream not open");t.forEach((async t=>{var e;console.log("[WRITE]",t,t.byteLength),await(null===(e=this.writer)||void 0===e?void 0:e.write(t))}));let e=0;for(const n of t)e+=n.byteLength;return console.log("[WROTE]",e),e}async readLoop(t){for(var e;this.reader&&(null===(e=this.port)||void 0===e?void 0:e.readable);){const{value:e,done:n}=await this.reader.read();if(e&&t(e),n){console.log("[readLoop] DONE",n),this.reader.releaseLock();break}}console.log("[readLoop] EXIT")}static isSupported(){return"serial"in navigator}static createOneHub(){const t=window.serPort;if(t){console.log("Closing left over port",t);try{t.disconnect()}catch(t){console.error("Ignoring close error",t)}finally{window.serPort=null}}const e=new A;return window.serPort=e,e}}class j extends a.DOMWidgetModel{defaults(){return Object.assign(Object.assign({},super.defaults()),{_model_name:j.model_name,_model_module:j.model_module,_model_module_version:j.model_module_version,_view_name:j.view_name,_view_module:j.view_module,_view_module_version:j.view_module_version,is_supported:!1,status:"Initializing...",value:"Loading...",request_options:{},serial_options:{},pkt_recv_front:[0,0],pkt_send_front:[0,0],pkt_recv_back:[0,0],pkt_send_back:[0,0]})}static get mytempid(){return j._mytempid}}j._mytempid=a.uuid(),j.serializers=Object.assign({},a.DOMWidgetModel.serializers),j.model_name="SerialHubModel",j.model_module=n,j.model_module_version=e,j.view_name="SerialHubView",j.view_module=n,j.view_module_version=e;class E extends a.DOMWidgetView{constructor(){super(...arguments),this._el_status=null,this._el_prompt=null,this._el_stats=null,this._el_value=null,this._shp=null}render(){console.log("RENDER serialhub widget"),this.el.id=this.id||l.uuid4(),this.el.classList.add("xx-serialhub-widget"),this._el_status=window.document.createElement("button"),this._el_status.classList.add("xx-serialhub-status"),this._el_prompt=window.document.createElement("span"),this._el_prompt.classList.add("xx-serialhub-prompt"),this._el_stats=window.document.createElement("pre"),this._el_stats.classList.add("xx-serialhub-stats"),this._el_value=window.document.createElement("pre"),this._el_value.classList.add("xx-serialhub-value"),this._el_status.onclick=t=>this.click_status(t),this._el_value.onclick=t=>this.click_value(t),this.el.append(this._el_status,this._el_prompt,this._el_stats,this._el_value),this.changed_status(),this.changed_value(),this.changed_stats(),this.update_stats_title(),this.model.on("change:status",this.changed_status,this),this.model.on("change:value",this.changed_value,this),this.model.on("change:request_options",this.changed_request_options,this),this.model.on("change:serial_options",this.changed_serial_options,this),this.model.on("change:pkt_recv_front",this.changed_stats,this),this.model.on("change:pkt_recv_back",this.changed_stats,this),this.model.on("change:pkt_send_front",this.changed_stats,this),this.model.on("change:pkt_send_back",this.changed_stats,this),this.model.on("msg:custom",this.msg_custom,this);const t=A.isSupported();return this.model.set("is_supported",t),this.model.set("status",t?"Supported":"Unsupported"),t&&(this._el_prompt.textContent="<<< Click to connect/disconnect a port"),this.touch(),this}get_port_options(){return[this.model.get("request_options"),this.model.get("serial_options")]}update_stats_title(){var t,e;const[n,s]=this.get_port_options();let i="Request-Options: "+JSON.stringify(n)+"\r\nSerial-Options: "+JSON.stringify(s);const o=null===(e=null===(t=this._shp)||void 0===t?void 0:t.port)||void 0===e?void 0:e.getInfo();o&&(i+="\r\nPort-Info:"+JSON.stringify(o)),this._el_prompt&&(this._el_prompt.title=i)}changed_request_options(){console.log("SET request_options:",this.model.get("request_options")),this.update_stats_title()}changed_serial_options(){console.log("SET serial_options:",this.model.get("serial_options")),this.update_stats_title()}changed_status(){this._el_status&&this.model&&(this._el_status.textContent=this.model.get("status"))}changed_value(){this._el_value&&this.model&&(this._el_value.textContent=this.model.get("value"))}changed_stats(){if(this._el_stats){let t="";t+=" RecvF:"+this.model.get("pkt_recv_front"),t+=" SendF:"+this.model.get("pkt_send_front"),t+="  (Front-End)\r\n",t+=" RecvB:"+this.model.get("pkt_recv_back"),t+=" SendB:"+this.model.get("pkt_send_back"),t+="  (Back-End)",this._el_stats.textContent=t}}stats_zero(){this.model.set("pkt_recv_front",[0,0]),this.model.set("pkt_send_front",[0,0]),this.model.set("pkt_recv_back",[0,0]),this.model.set("pkt_send_back",[0,0]),this.touch()}stats_inc_tuple(t,e,n=1){const[s,i]=this.model.get(t),o=[s+e,i+n];return this.model.set(t,o),this.touch(),o}cb_read(t){console.log("DATA-IN",t.length,t);const e=this.stats_inc_tuple("pkt_recv_front",t.length);try{this.model.send({type:"RECV",pkt_recv_front:e},{},[t])}catch(t){throw console.log("FAILED send of serial data to backend.",t),t}}cb_connect(){var t;console.log("cb_connect",this._shp),this.update_stats_title(),this.stats_zero(),null===(t=this._shp)||void 0===t||t.readLoop((t=>{this.cb_read(t)})),console.log("DONE cb_connect")}widget_connect(){this._shp=new A;const[t,e]=this.get_port_options();console.log("CONNECT options",t,e),this._shp.connect(t,e).then((()=>{this.model.set("status","Connected"),this.cb_connect()}),(t=>{this.model.set("status","Disconnected"),this._shp=null}))}widget_disconnect(){var t;console.log("DISconnect",this,this._shp),null===(t=this._shp)||void 0===t||t.disconnect().then((()=>{this.model.set("status","Disconnected"),this._shp=null}),(t=>{this.model.set("status","Stuck")}))}click_status(t){console.log("click_status",this,this.model,t),this._shp?this.widget_disconnect():this.widget_connect(),console.log("click_status DONE",this._shp)}click_value(t){this&&this.model}msg_custom(t,e){const n=t.type;if("SEND"===n){if(console.log("MSG-SEND",e),this._shp){const t=this._shp.writeToStream(e);this.stats_inc_tuple("pkt_send_front",t)}}else console.log("UNKNOWN MESSAGE: ",n,t,e)}}const k={id:"serialhub:plugin",autoStart:!0,activate:t=>{console.log("JupyterLab extension serialhub is NOW activated!")}}})(),i})()));
//# sourceMappingURL=embed-bundle.js.map