{"version":3,"file":"5853.f70a24ac035197b4cce6.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/@material-ui/core/esm/Card/Card.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/CardContent/CardContent.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/CardHeader/CardHeader.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js","webpack://quilt-navigator/./app/embed/Dir.js","webpack://quilt-navigator/./app/embed/getCrumbs.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 16\n  },\n\n  /* Styles applied to the avatar element. */\n  avatar: {\n    flex: '0 0 auto',\n    marginRight: 16\n  },\n\n  /* Styles applied to the action element. */\n  action: {\n    flex: '0 0 auto',\n    alignSelf: 'flex-start',\n    marginTop: -8,\n    marginRight: -8\n  },\n\n  /* Styles applied to the content wrapper element. */\n  content: {\n    flex: '1 1 auto'\n  },\n\n  /* Styles applied to the title Typography element. */\n  title: {},\n\n  /* Styles applied to the subheader Typography element. */\n  subheader: {}\n};\nvar CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(props, ref) {\n  var action = props.action,\n      avatar = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      subheaderProp = props.subheader,\n      subheaderTypographyProps = props.subheaderTypographyProps,\n      titleProp = props.title,\n      titleTypographyProps = props.titleTypographyProps,\n      other = _objectWithoutProperties(props, [\"action\", \"avatar\", \"classes\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  var title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  var subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"textSecondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), avatar && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.avatar\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.content\n  }, title, subheader), action && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar for the Card Header.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The content of the Card Title.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardHeader'\n})(CardHeader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","import { basename } from 'path'\n\nimport dedent from 'dedent'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport * as M from '@material-ui/core'\n\nimport { copyWithoutSpaces, render as renderCrumbs } from 'components/BreadCrumbs'\nimport * as AWS from 'utils/AWS'\nimport AsyncResult from 'utils/AsyncResult'\nimport * as Config from 'utils/Config'\nimport { useData } from 'utils/Data'\nimport * as NamedRoutes from 'utils/NamedRoutes'\nimport parseSearch from 'utils/parseSearch'\nimport * as s3paths from 'utils/s3paths'\n\nimport Code from 'containers/Bucket/Code'\nimport * as FileView from 'containers/Bucket/FileView'\nimport { Listing, PrefixFilter } from 'containers/Bucket/Listing'\nimport Summary from 'containers/Bucket/Summary'\nimport { displayError } from 'containers/Bucket/errors'\nimport * as requests from 'containers/Bucket/requests'\n\nimport * as EmbedConfig from './EmbedConfig'\nimport getCrumbs from './getCrumbs'\n\nconst formatListing = ({ urls, scope }, r) => {\n  const dirs = r.dirs.map((name) => ({\n    type: 'dir',\n    name: s3paths.ensureNoSlash(s3paths.withoutPrefix(r.path, name)),\n    to: urls.bucketDir(r.bucket, name),\n  }))\n  const files = r.files.map(({ key, size, modified, archived }) => ({\n    type: 'file',\n    name: basename(key),\n    to: urls.bucketFile(r.bucket, key),\n    size,\n    modified,\n    archived,\n  }))\n  const items = [...dirs, ...files]\n  if (r.path !== '' && r.path !== scope && !r.prefix) {\n    items.unshift({\n      type: 'dir',\n      name: '..',\n      to: urls.bucketDir(r.bucket, s3paths.up(r.path)),\n    })\n  }\n  // filter-out files with same name as one of dirs\n  return R.uniqBy(R.prop('name'), items)\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  crumbs: {\n    ...t.typography.body1,\n    maxWidth: '100%',\n    overflowWrap: 'break-word',\n  },\n}))\n\nexport default function Dir({\n  match: {\n    params: { bucket, path: encodedPath = '' },\n  },\n  location: l,\n}) {\n  const cfg = EmbedConfig.use()\n  const { noDownload } = Config.use()\n  const classes = useStyles()\n  const { urls } = NamedRoutes.use()\n  const history = useHistory()\n  const s3 = AWS.S3.use()\n  const { prefix } = parseSearch(l.search)\n  const path = s3paths.decode(encodedPath)\n  const dest = path ? basename(path) : bucket\n\n  const code = React.useMemo(\n    () => [\n      {\n        label: 'Python',\n        hl: 'python',\n        contents: dedent`\n          import quilt3\n          b = quilt3.Bucket(\"s3://${bucket}\")\n          # list files\n          b.ls(\"${path}\")\n          # download\n          b.fetch(\"${path}\", \"./${dest}\")\n        `,\n      },\n      {\n        label: 'CLI',\n        hl: 'bash',\n        contents: dedent`\n          # list files\n          aws s3 ls \"s3://${bucket}/${path}\"\n          # download\n          aws s3 cp --recursive \"s3://${bucket}/${path}\" \"./${dest}\"\n        `,\n      },\n    ],\n    [bucket, path, dest],\n  )\n\n  const [prev, setPrev] = React.useState(null)\n\n  React.useLayoutEffect(() => {\n    // reset accumulated results when path and/or prefix change\n    setPrev(null)\n  }, [path, prefix])\n\n  const data = useData(requests.bucketListing, {\n    s3,\n    bucket,\n    path,\n    prefix,\n    prev,\n  })\n\n  const loadMore = React.useCallback(() => {\n    AsyncResult.case(\n      {\n        Ok: (res) => {\n          // this triggers a re-render and fetching of next page of results\n          if (res.continuationToken) setPrev(res)\n        },\n        _: () => {},\n      },\n      data.result,\n    )\n  }, [data.result, setPrev])\n\n  const setPrefix = React.useCallback(\n    (newPrefix) => {\n      history.push(urls.bucketDir(bucket, path, newPrefix))\n    },\n    [history, urls, bucket, path],\n  )\n\n  return (\n    <M.Box pt={2} pb={4}>\n      <M.Box display=\"flex\" alignItems=\"flex-start\" mb={2}>\n        <div className={classes.crumbs} onCopy={copyWithoutSpaces}>\n          {renderCrumbs(getCrumbs({ bucket, path, urls, scope: cfg.scope }))}\n        </div>\n        <M.Box flexGrow={1} />\n        {!noDownload && (\n          <FileView.ZipDownloadForm\n            suffix={`dir/${bucket}/${path}`}\n            label=\"Download directory\"\n            newTab\n          />\n        )}\n      </M.Box>\n\n      {!cfg.hideCode && <Code gutterBottom>{code}</Code>}\n\n      {data.case({\n        Err: displayError(),\n        Init: () => null,\n        _: (x) => {\n          const res = AsyncResult.getPrevResult(x)\n\n          if (!res) return <M.CircularProgress />\n\n          const items = formatListing({ urls, scope: cfg.scope }, res)\n\n          const locked = !AsyncResult.Ok.is(x)\n\n          return (\n            <>\n              <Listing\n                items={items}\n                locked={locked}\n                loadMore={loadMore}\n                truncated={res.truncated}\n                prefixFilter={res.prefix}\n                toolbarContents={\n                  <PrefixFilter\n                    key={`${res.bucket}/${res.path}`}\n                    prefix={res.prefix}\n                    setPrefix={setPrefix}\n                  />\n                }\n              />\n              <Summary files={res.files} />\n            </>\n          )\n        },\n      })}\n    </M.Box>\n  )\n}\n","import { basename } from 'path'\n\nimport * as R from 'ramda'\nimport * as React from 'react'\n\nimport { Crumb } from 'components/BreadCrumbs'\nimport * as s3paths from 'utils/s3paths'\n\nexport default ({ bucket, path, urls, scope, excludeBase = false }) => {\n  const scoped = scope && path.startsWith(scope)\n  const scopedPath = scoped ? path.substring(scope.length) : path\n  const root = { label: scoped ? basename(scope) : 'ROOT', path: '' }\n  const start = excludeBase ? s3paths.up(scopedPath) : scopedPath\n  const items = [root, ...s3paths.getBreadCrumbs(start)].map(({ label, path: segPath }) =>\n    Crumb.Segment({\n      label,\n      to:\n        segPath === scopedPath\n          ? undefined\n          : urls.bucketDir(bucket, `${scoped ? scope : ''}${segPath}`),\n    }),\n  )\n  const interspersed = R.intersperse(Crumb.Sep(<>&nbsp;/ </>), items)\n  return excludeBase ? [...interspersed, Crumb.Sep(<>&nbsp;/</>)] : interspersed\n}\n"],"names":["Card","props","ref","classes","className","_props$raised","raised","other","root","elevation","overflow","name","CardContent","_props$component","component","Component","padding","paddingBottom","CardHeader","action","avatar","_props$disableTypogra","disableTypography","subheaderProp","subheader","subheaderTypographyProps","titleProp","title","titleTypographyProps","type","variant","display","color","content","alignItems","flex","marginRight","alignSelf","marginTop","d","useStyles","t","crumbs","typography","body1","maxWidth","overflowWrap","Dir","params","bucket","path","encodedPath","l","cfg","noDownload","urls","history","s3","prefix","search","dest","basename","code","label","hl","contents","prev","setPrev","data","loadMore","Ok","res","continuationToken","_","result","setPrefix","newPrefix","push","bucketDir","pt","pb","mb","onCopy","scope","flexGrow","suffix","newTab","hideCode","gutterBottom","case","Err","Init","x","items","r","dirs","map","to","files","key","size","modified","archived","bucketFile","unshift","formatListing","locked","truncated","prefixFilter","toolbarContents","excludeBase","scoped","startsWith","scopedPath","substring","length","start","segPath","undefined","interspersed"],"sourceRoot":""}