{"version":3,"file":"1254.96dd29d7e00c77266a2d.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack://quilt-navigator/./app/containers/Admin/Form.tsx","webpack://quilt-navigator/./app/containers/Admin/Settings.tsx","webpack://quilt-navigator/./app/containers/Bucket/PackageDialog/SubmitSpinner.tsx"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react'\nimport type * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\ninterface FieldProps {\n  errors: Record<string, React.ReactNode>\n  input: RF.FieldInputProps<string>\n  meta: RF.FieldMetaState<string>\n}\n\nexport function Field({\n  input,\n  meta,\n  errors,\n  helperText,\n  InputLabelProps,\n  ...rest\n}: FieldProps & M.TextFieldProps) {\n  const error = meta.submitFailed && (meta.error || meta.submitError)\n  const props = {\n    error: !!error,\n    helperText: error ? errors[error] || error : helperText,\n    disabled: meta.submitting || meta.submitSucceeded,\n    InputLabelProps: { shrink: true, ...InputLabelProps },\n    ...input,\n    ...rest,\n  }\n  return <M.TextField {...props} />\n}\n\nconst useCheckboxStyles = M.makeStyles({\n  root: {\n    marginBottom: -9,\n    marginTop: -9,\n  },\n})\n\ninterface CheckboxProps {\n  errors?: Record<string, React.ReactNode>\n  input?: RF.FieldInputProps<boolean>\n  meta: RF.FieldMetaState<string | Symbol>\n  label?: string\n  FormControlLabelProps?: M.FormControlLabelProps\n}\n\nexport function Checkbox({\n  input = {} as RF.FieldInputProps<boolean>,\n  meta,\n  errors = undefined, // eslint-disable-line @typescript-eslint/no-unused-vars\n  label = undefined,\n  FormControlLabelProps = {} as M.FormControlLabelProps,\n  ...rest\n}: CheckboxProps & M.CheckboxProps) {\n  const classes = useCheckboxStyles()\n  return (\n    <M.FormControlLabel\n      {...FormControlLabelProps}\n      control={\n        <M.Checkbox\n          classes={classes}\n          disabled={meta.submitting || meta.submitSucceeded}\n          {...input}\n          {...rest}\n        />\n      }\n      label={label}\n    />\n  )\n}\n\nconst useFormErrorStyles = M.makeStyles((t) => ({\n  root: {\n    marginTop: t.spacing(3),\n\n    '& a': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\ninterface FormErrorProps {\n  errors: Record<string, React.ReactNode>\n  error?: string\n}\n\nexport function FormError({\n  error,\n  errors,\n  ...rest\n}: FormErrorProps & M.TypographyProps) {\n  const classes = useFormErrorStyles()\n  if (!error) return null\n  return (\n    <M.Typography color=\"error\" classes={classes} {...rest}>\n      {errors[error] || error}\n    </M.Typography>\n  )\n}\n","import * as FF from 'final-form'\nimport * as R from 'ramda'\nimport * as React from 'react'\nimport * as RF from 'react-final-form'\nimport * as M from '@material-ui/core'\n\nimport SubmitSpinner from 'containers/Bucket/PackageDialog/SubmitSpinner'\nimport * as Notifications from 'containers/Notifications'\nimport * as CatalogSettings from 'utils/CatalogSettings'\nimport * as validators from 'utils/validators'\n\nimport * as Form from './Form'\n\nconst useNavLinkEditorStyles = M.makeStyles((t) => ({\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    marginTop: t.spacing(1),\n  },\n  field: {\n    display: 'flex',\n  },\n  fieldName: {\n    ...t.typography.body2,\n    flexShrink: 0,\n    fontWeight: t.typography.fontWeightMedium,\n    width: 50,\n  },\n  fieldValue: {\n    ...t.typography.body2,\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n  progress: {\n    marginLeft: t.spacing(1),\n  },\n  notConfigured: {\n    ...t.typography.body1,\n    marginRight: t.spacing(2),\n  },\n}))\n\nfunction NavLinkEditor() {\n  const settings = CatalogSettings.use()\n  const writeSettings = CatalogSettings.useWriteSettings()\n\n  const { push } = Notifications.use()\n\n  const classes = useNavLinkEditorStyles()\n\n  const [editing, setEditing] = React.useState(false)\n  const [formKey, setFormKey] = React.useState(1)\n  const [removing, setRemoving] = React.useState(false)\n\n  const edit = React.useCallback(() => {\n    if (removing) return\n    setEditing(true)\n  }, [removing])\n\n  const cancel = React.useCallback(() => {\n    setEditing(false)\n  }, [])\n\n  const handleExited = React.useCallback(() => {\n    // reset the form\n    setFormKey(R.inc)\n  }, [])\n\n  const remove = React.useCallback(async () => {\n    if (editing || removing || !settings?.customNavLink) return\n    // XXX: implement custom MUI Dialog-based confirm?\n    // eslint-disable-next-line no-restricted-globals, no-alert\n    if (!confirm('You are about to remove custom link')) return\n    setRemoving(true)\n    try {\n      await writeSettings(R.dissoc('customNavLink', settings))\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.warn('Error saving settings:')\n      // eslint-disable-next-line no-console\n      console.error(e)\n      push(\"Couldn't save settings, see console for details\")\n    } finally {\n      setRemoving(false)\n    }\n  }, [editing, removing, settings, writeSettings, push])\n\n  const onSubmit = React.useCallback(\n    async (values: { url: string; label: string }) => {\n      try {\n        await writeSettings({\n          ...settings,\n          customNavLink: { url: values.url, label: values.label },\n        })\n        setEditing(false)\n        return undefined\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn('Error saving settings:')\n        // eslint-disable-next-line no-console\n        console.error(e)\n        return { [FF.FORM_ERROR]: \"Couldn't save settings, see console for details\" }\n      }\n    },\n    [settings, writeSettings],\n  )\n\n  return (\n    <>\n      {settings?.customNavLink ? (\n        <>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>URL:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.url}</div>\n          </div>\n          <div className={classes.field}>\n            <div className={classes.fieldName}>Label:</div>\n            <div className={classes.fieldValue}>{settings.customNavLink.label}</div>\n          </div>\n          <div className={classes.actions}>\n            <M.Button\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"small\"\n              onClick={edit}\n              disabled={removing}\n            >\n              Edit\n            </M.Button>\n            <M.Box pl={1} />\n            <M.Button color=\"primary\" size=\"small\" onClick={remove} disabled={removing}>\n              Remove\n            </M.Button>\n            {removing && <M.CircularProgress size={24} className={classes.progress} />}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className={classes.notConfigured}>Not configured</div>\n          <div className={classes.actions}>\n            <M.Button variant=\"outlined\" color=\"primary\" size=\"small\" onClick={edit}>\n              Configure link\n            </M.Button>\n          </div>\n        </>\n      )}\n      <M.Dialog open={editing} onExited={handleExited} fullWidth>\n        <RF.Form onSubmit={onSubmit} key={formKey}>\n          {({\n            handleSubmit,\n            submitting,\n            submitFailed,\n            submitError,\n            error,\n            hasValidationErrors,\n          }) => (\n            <>\n              <M.DialogTitle>Configure custom link</M.DialogTitle>\n              <M.DialogContent>\n                <form onSubmit={handleSubmit}>\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.url || ''}\n                    name=\"url\"\n                    label=\"URL\"\n                    placeholder=\"e.g. https://example.com/path\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter URL to link to',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <M.Box pt={2} />\n                  <RF.Field\n                    component={Form.Field}\n                    initialValue={settings?.customNavLink?.label || ''}\n                    name=\"label\"\n                    label=\"Label\"\n                    placeholder=\"Enter link label\"\n                    validate={validators.required as FF.FieldValidator<string>}\n                    errors={{\n                      required: 'Enter link label',\n                    }}\n                    disabled={submitting}\n                    fullWidth\n                    InputLabelProps={{ shrink: true }}\n                  />\n                  <input type=\"submit\" style={{ display: 'none' }} />\n                </form>\n              </M.DialogContent>\n              <M.DialogActions>\n                {submitting ? (\n                  <SubmitSpinner />\n                ) : (\n                  (!!error || !!submitError) && (\n                    <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n                      <M.Icon color=\"error\">error_outline</M.Icon>\n                      <M.Box pl={1} />\n                      <M.Typography variant=\"body2\" color=\"error\">\n                        {error || submitError}\n                      </M.Typography>\n                    </M.Box>\n                  )\n                )}\n\n                <M.Button\n                  type=\"submit\"\n                  onClick={handleSubmit}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={submitting || (submitFailed && hasValidationErrors)}\n                >\n                  Save\n                </M.Button>\n                <M.Button onClick={cancel} disabled={submitting}>\n                  Cancel\n                </M.Button>\n              </M.DialogActions>\n            </>\n          )}\n        </RF.Form>\n      </M.Dialog>\n    </>\n  )\n}\n\nconst useStyles = M.makeStyles((t) => ({\n  sectionHeading: {\n    ...t.typography.body1,\n    fontWeight: t.typography.fontWeightMedium,\n    marginBottom: t.spacing(1),\n  },\n}))\n\nexport default function Settings() {\n  const classes = useStyles()\n  return (\n    <M.Box mt={2} mb={2}>\n      <M.Paper>\n        <M.Box px={3} pt={2} pb={1}>\n          <M.Typography variant=\"h6\">Catalog Customization</M.Typography>\n        </M.Box>\n        <M.Box px={3} pb={2}>\n          <div className={classes.sectionHeading}>Custom navbar link</div>\n          <React.Suspense fallback={<M.CircularProgress />}>\n            <NavLinkEditor />\n          </React.Suspense>\n        </M.Box>\n      </M.Paper>\n    </M.Box>\n  )\n}\n","import * as R from 'ramda'\nimport * as React from 'react'\n\nimport * as M from '@material-ui/core'\n\nimport Delay from 'utils/Delay'\n\ninterface SubmitSpinnerProps {\n  children?: React.ReactNode\n  value?: number\n}\n\nexport default function SubmitSpinner({ children, value }: SubmitSpinnerProps) {\n  const hasValue = R.is(Number, value) && value! < 100\n\n  return (\n    <Delay ms={200} alwaysRender>\n      {(ready) => (\n        <M.Fade in={ready}>\n          <M.Box flexGrow={1} display=\"flex\" alignItems=\"center\" pl={2}>\n            <M.CircularProgress\n              size={24}\n              variant={hasValue ? 'determinate' : 'indeterminate'}\n              value={hasValue ? value! * 0.9 : undefined}\n            />\n\n            {!!children && (\n              <>\n                <M.Box pl={1} />\n\n                <M.Typography variant=\"body2\" color=\"textSecondary\">\n                  {children}\n                </M.Typography>\n              </>\n            )}\n          </M.Box>\n        </M.Fade>\n      )}\n    </Delay>\n  )\n}\n"],"names":["createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","props","ref","_props$checkedIcon","checkedIcon","classes","_props$color","color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","size","other","SwitchBase","type","root","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","theme","palette","text","secondary","colorPrimary","primary","main","backgroundColor","action","hoverOpacity","colorSecondary","name","FormControlLabel","className","control","disabledProp","label","inputRef","_props$labelPlacement","labelPlacement","onChange","value","muiFormControl","controlProps","forEach","key","component","display","alignItems","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","flexDirection","labelPlacementTop","labelPlacementBottom","autoFocus","checkedProp","defaultChecked","id","onBlur","onFocus","readOnly","required","tabIndex","_useControlled","controlled","default","Boolean","state","_useControlled2","setCheckedState","hasLabelFor","role","event","input","newChecked","target","padding","position","opacity","width","height","top","left","margin","zIndex","Field","meta","errors","helperText","InputLabelProps","rest","error","submitFailed","submitError","submitting","submitSucceeded","shrink","useCheckboxStyles","marginBottom","marginTop","FormControlLabelProps","useFormErrorStyles","t","spacing","textDecoration","FormError","useNavLinkEditorStyles","actions","field","fieldName","typography","body2","flexShrink","fontWeight","fontWeightMedium","fieldValue","overflow","textOverflow","whiteSpace","progress","notConfigured","body1","NavLinkEditor","settings","writeSettings","push","editing","setEditing","formKey","setFormKey","removing","setRemoving","edit","cancel","handleExited","remove","customNavLink","confirm","console","warn","onSubmit","values","url","variant","onClick","pl","open","onExited","fullWidth","handleSubmit","hasValidationErrors","initialValue","placeholder","validate","pt","style","flexGrow","useStyles","sectionHeading","Settings","mt","mb","px","pb","fallback","SubmitSpinner","children","hasValue","Number","ms","alwaysRender","ready","in"],"sourceRoot":""}