{"version":3,"file":"9315.24e4475450d0310ac191.chunk.js","mappings":"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","sources":["webpack://quilt-navigator/./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/Dialog/Dialog.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/DialogActions/DialogActions.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","webpack://quilt-navigator/./node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Fade from '../Fade';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    // Improve scrollable dialog support.\n    zIndex: -1,\n    position: 'fixed',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    right: 0,\n    bottom: 0,\n    top: 0,\n    left: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent'\n  },\n\n  /* Styles applied to the root element if `invisible={true}`. */\n  invisible: {\n    backgroundColor: 'transparent'\n  }\n};\nvar Backdrop = /*#__PURE__*/React.forwardRef(function Backdrop(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$invisible = props.invisible,\n      invisible = _props$invisible === void 0 ? false : _props$invisible,\n      open = props.open,\n      transitionDuration = props.transitionDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"invisible\", \"open\", \"transitionDuration\", \"TransitionComponent\"]);\n\n  return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, className, invisible && classes.invisible),\n    \"aria-hidden\": true,\n    ref: ref\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   */\n  invisible: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBackdrop'\n})(Backdrop);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);"],"names":["Backdrop","props","ref","children","classes","className","_props$invisible","invisible","open","transitionDuration","_props$TransitionComp","TransitionComponent","Fade","other","in","timeout","root","withStyles","zIndex","position","display","alignItems","justifyContent","right","bottom","top","left","backgroundColor","WebkitTapHighlightColor","name","defaultTransitionDuration","enter","exit","Dialog","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onClose","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$transitionDura","TransitionProps","ariaDescribedby","ariaLabelledby","mouseDownTarget","Modal","BackdropComponent","closeAfterTransition","appear","role","container","concat","capitalize","onMouseUp","event","target","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","theme","scrollPaper","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","height","width","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","DialogActions","_props$disableSpacing","disableSpacing","spacing","padding","flex","marginLeft","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","palette","divider","borderBottom","DialogTitle","_props$disableTypogra","disableTypography","component","variant"],"sourceRoot":""}