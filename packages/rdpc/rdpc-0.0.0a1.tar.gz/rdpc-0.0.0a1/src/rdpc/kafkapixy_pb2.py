# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: kafkapixy.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fkafkapixy.proto\"*\n\x0cRecordHeader\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x0c\"\x97\x01\n\x06ProdRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\x11\n\tkey_value\x18\x03 \x01(\x0c\x12\x15\n\rkey_undefined\x18\x04 \x01(\x08\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12\x12\n\nasync_mode\x18\x06 \x01(\x08\x12\x1e\n\x07headers\x18\x07 \x03(\x0b\x32\r.RecordHeader\"+\n\x06ProdRs\x12\x11\n\tpartition\x18\x01 \x01(\x05\x12\x0e\n\x06offset\x18\x02 \x01(\x03\"\x88\x01\n\nConsNAckRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\x12\x0e\n\x06no_ack\x18\x04 \x01(\x08\x12\x10\n\x08\x61uto_ack\x18\x05 \x01(\x08\x12\x15\n\rack_partition\x18\x06 \x01(\x05\x12\x12\n\nack_offset\x18\x07 \x01(\x03\"\x86\x01\n\x06\x43onsRs\x12\x11\n\tpartition\x18\x01 \x01(\x05\x12\x0e\n\x06offset\x18\x02 \x01(\x03\x12\x11\n\tkey_value\x18\x03 \x01(\x0c\x12\x15\n\rkey_undefined\x18\x04 \x01(\x08\x12\x0f\n\x07message\x18\x05 \x01(\x0c\x12\x1e\n\x07headers\x18\x06 \x03(\x0b\x32\r.RecordHeader\"Y\n\x05\x41\x63kRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\x12\x11\n\tpartition\x18\x04 \x01(\x05\x12\x0e\n\x06offset\x18\x05 \x01(\x03\"\x07\n\x05\x41\x63kRs\"\x93\x01\n\x0fPartitionOffset\x12\x11\n\tpartition\x18\x01 \x01(\x05\x12\r\n\x05\x62\x65gin\x18\x02 \x01(\x03\x12\x0b\n\x03\x65nd\x18\x03 \x01(\x03\x12\r\n\x05\x63ount\x18\x04 \x01(\x03\x12\x0e\n\x06offset\x18\x05 \x01(\x03\x12\x0b\n\x03lag\x18\x06 \x01(\x03\x12\x10\n\x08metadata\x18\x07 \x01(\t\x12\x13\n\x0bsparse_acks\x18\x08 \x01(\t\"=\n\x0cGetOffsetsRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\"1\n\x0cGetOffsetsRs\x12!\n\x07offsets\x18\x01 \x03(\x0b\x32\x10.PartitionOffset\"U\n\x11PartitionMetadata\x12\x11\n\tpartition\x18\x01 \x01(\x05\x12\x0e\n\x06leader\x18\x02 \x01(\x05\x12\x10\n\x08replicas\x18\x03 \x03(\x05\x12\x0b\n\x03isr\x18\x04 \x03(\x05\"M\n\x12GetTopicMetadataRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\x17\n\x0fwith_partitions\x18\x03 \x01(\x08\"\xad\x01\n\x12GetTopicMetadataRs\x12\x0f\n\x07version\x18\x01 \x01(\x05\x12/\n\x06\x63onfig\x18\x02 \x03(\x0b\x32\x1f.GetTopicMetadataRs.ConfigEntry\x12&\n\npartitions\x18\x03 \x03(\x0b\x32\x12.PartitionMetadata\x1a-\n\x0b\x43onfigEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"{\n\x0bListTopicRs\x12(\n\x06topics\x18\x01 \x03(\x0b\x32\x18.ListTopicRs.TopicsEntry\x1a\x42\n\x0bTopicsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\"\n\x05value\x18\x02 \x01(\x0b\x32\x13.GetTopicMetadataRs:\x02\x38\x01\"7\n\x0bListTopicRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\x17\n\x0fwith_partitions\x18\x02 \x01(\x08\"@\n\x0fListConsumersRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\"(\n\x12\x43onsumerPartitions\x12\x12\n\npartitions\x18\x01 \x03(\x05\"\x8a\x01\n\x0e\x43onsumerGroups\x12\x31\n\tconsumers\x18\x01 \x03(\x0b\x32\x1e.ConsumerGroups.ConsumersEntry\x1a\x45\n\x0e\x43onsumersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\"\n\x05value\x18\x02 \x01(\x0b\x32\x13.ConsumerPartitions:\x02\x38\x01\"\x7f\n\x0fListConsumersRs\x12,\n\x06groups\x18\x01 \x03(\x0b\x32\x1c.ListConsumersRs.GroupsEntry\x1a>\n\x0bGroupsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1e\n\x05value\x18\x02 \x01(\x0b\x32\x0f.ConsumerGroups:\x02\x38\x01\"`\n\x0cSetOffsetsRq\x12\x0f\n\x07\x63luster\x18\x01 \x01(\t\x12\r\n\x05topic\x18\x02 \x01(\t\x12\r\n\x05group\x18\x03 \x01(\t\x12!\n\x07offsets\x18\x04 \x03(\x0b\x32\x10.PartitionOffset\"\x0e\n\x0cSetOffsetsRs2\xe9\x02\n\tKafkaPixy\x12\x1d\n\x07Produce\x12\x07.ProdRq\x1a\x07.ProdRs\"\x00\x12%\n\x0b\x43onsumeNAck\x12\x0b.ConsNAckRq\x1a\x07.ConsRs\"\x00\x12\x17\n\x03\x41\x63k\x12\x06.AckRq\x1a\x06.AckRs\"\x00\x12,\n\nGetOffsets\x12\r.GetOffsetsRq\x1a\r.GetOffsetsRs\"\x00\x12,\n\nSetOffsets\x12\r.SetOffsetsRq\x1a\r.SetOffsetsRs\"\x00\x12*\n\nListTopics\x12\x0c.ListTopicRq\x1a\x0c.ListTopicRs\"\x00\x12\x35\n\rListConsumers\x12\x10.ListConsumersRq\x1a\x10.ListConsumersRs\"\x00\x12>\n\x10GetTopicMetadata\x12\x13.GetTopicMetadataRq\x1a\x13.GetTopicMetadataRs\"\x00\x42O\n\x11mailgun.kafkapixyB\x0eKafkaPixyProtoP\x01Z(github.com/mailgun/kafka-pixy/gen/golangb\x06proto3')



_RECORDHEADER = DESCRIPTOR.message_types_by_name['RecordHeader']
_PRODRQ = DESCRIPTOR.message_types_by_name['ProdRq']
_PRODRS = DESCRIPTOR.message_types_by_name['ProdRs']
_CONSNACKRQ = DESCRIPTOR.message_types_by_name['ConsNAckRq']
_CONSRS = DESCRIPTOR.message_types_by_name['ConsRs']
_ACKRQ = DESCRIPTOR.message_types_by_name['AckRq']
_ACKRS = DESCRIPTOR.message_types_by_name['AckRs']
_PARTITIONOFFSET = DESCRIPTOR.message_types_by_name['PartitionOffset']
_GETOFFSETSRQ = DESCRIPTOR.message_types_by_name['GetOffsetsRq']
_GETOFFSETSRS = DESCRIPTOR.message_types_by_name['GetOffsetsRs']
_PARTITIONMETADATA = DESCRIPTOR.message_types_by_name['PartitionMetadata']
_GETTOPICMETADATARQ = DESCRIPTOR.message_types_by_name['GetTopicMetadataRq']
_GETTOPICMETADATARS = DESCRIPTOR.message_types_by_name['GetTopicMetadataRs']
_GETTOPICMETADATARS_CONFIGENTRY = _GETTOPICMETADATARS.nested_types_by_name['ConfigEntry']
_LISTTOPICRS = DESCRIPTOR.message_types_by_name['ListTopicRs']
_LISTTOPICRS_TOPICSENTRY = _LISTTOPICRS.nested_types_by_name['TopicsEntry']
_LISTTOPICRQ = DESCRIPTOR.message_types_by_name['ListTopicRq']
_LISTCONSUMERSRQ = DESCRIPTOR.message_types_by_name['ListConsumersRq']
_CONSUMERPARTITIONS = DESCRIPTOR.message_types_by_name['ConsumerPartitions']
_CONSUMERGROUPS = DESCRIPTOR.message_types_by_name['ConsumerGroups']
_CONSUMERGROUPS_CONSUMERSENTRY = _CONSUMERGROUPS.nested_types_by_name['ConsumersEntry']
_LISTCONSUMERSRS = DESCRIPTOR.message_types_by_name['ListConsumersRs']
_LISTCONSUMERSRS_GROUPSENTRY = _LISTCONSUMERSRS.nested_types_by_name['GroupsEntry']
_SETOFFSETSRQ = DESCRIPTOR.message_types_by_name['SetOffsetsRq']
_SETOFFSETSRS = DESCRIPTOR.message_types_by_name['SetOffsetsRs']
RecordHeader = _reflection.GeneratedProtocolMessageType('RecordHeader', (_message.Message,), {
  'DESCRIPTOR' : _RECORDHEADER,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:RecordHeader)
  })
_sym_db.RegisterMessage(RecordHeader)

ProdRq = _reflection.GeneratedProtocolMessageType('ProdRq', (_message.Message,), {
  'DESCRIPTOR' : _PRODRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ProdRq)
  })
_sym_db.RegisterMessage(ProdRq)

ProdRs = _reflection.GeneratedProtocolMessageType('ProdRs', (_message.Message,), {
  'DESCRIPTOR' : _PRODRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ProdRs)
  })
_sym_db.RegisterMessage(ProdRs)

ConsNAckRq = _reflection.GeneratedProtocolMessageType('ConsNAckRq', (_message.Message,), {
  'DESCRIPTOR' : _CONSNACKRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ConsNAckRq)
  })
_sym_db.RegisterMessage(ConsNAckRq)

ConsRs = _reflection.GeneratedProtocolMessageType('ConsRs', (_message.Message,), {
  'DESCRIPTOR' : _CONSRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ConsRs)
  })
_sym_db.RegisterMessage(ConsRs)

AckRq = _reflection.GeneratedProtocolMessageType('AckRq', (_message.Message,), {
  'DESCRIPTOR' : _ACKRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:AckRq)
  })
_sym_db.RegisterMessage(AckRq)

AckRs = _reflection.GeneratedProtocolMessageType('AckRs', (_message.Message,), {
  'DESCRIPTOR' : _ACKRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:AckRs)
  })
_sym_db.RegisterMessage(AckRs)

PartitionOffset = _reflection.GeneratedProtocolMessageType('PartitionOffset', (_message.Message,), {
  'DESCRIPTOR' : _PARTITIONOFFSET,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:PartitionOffset)
  })
_sym_db.RegisterMessage(PartitionOffset)

GetOffsetsRq = _reflection.GeneratedProtocolMessageType('GetOffsetsRq', (_message.Message,), {
  'DESCRIPTOR' : _GETOFFSETSRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:GetOffsetsRq)
  })
_sym_db.RegisterMessage(GetOffsetsRq)

GetOffsetsRs = _reflection.GeneratedProtocolMessageType('GetOffsetsRs', (_message.Message,), {
  'DESCRIPTOR' : _GETOFFSETSRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:GetOffsetsRs)
  })
_sym_db.RegisterMessage(GetOffsetsRs)

PartitionMetadata = _reflection.GeneratedProtocolMessageType('PartitionMetadata', (_message.Message,), {
  'DESCRIPTOR' : _PARTITIONMETADATA,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:PartitionMetadata)
  })
_sym_db.RegisterMessage(PartitionMetadata)

GetTopicMetadataRq = _reflection.GeneratedProtocolMessageType('GetTopicMetadataRq', (_message.Message,), {
  'DESCRIPTOR' : _GETTOPICMETADATARQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:GetTopicMetadataRq)
  })
_sym_db.RegisterMessage(GetTopicMetadataRq)

GetTopicMetadataRs = _reflection.GeneratedProtocolMessageType('GetTopicMetadataRs', (_message.Message,), {

  'ConfigEntry' : _reflection.GeneratedProtocolMessageType('ConfigEntry', (_message.Message,), {
    'DESCRIPTOR' : _GETTOPICMETADATARS_CONFIGENTRY,
    '__module__' : 'kafkapixy_pb2'
    # @@protoc_insertion_point(class_scope:GetTopicMetadataRs.ConfigEntry)
    })
  ,
  'DESCRIPTOR' : _GETTOPICMETADATARS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:GetTopicMetadataRs)
  })
_sym_db.RegisterMessage(GetTopicMetadataRs)
_sym_db.RegisterMessage(GetTopicMetadataRs.ConfigEntry)

ListTopicRs = _reflection.GeneratedProtocolMessageType('ListTopicRs', (_message.Message,), {

  'TopicsEntry' : _reflection.GeneratedProtocolMessageType('TopicsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTTOPICRS_TOPICSENTRY,
    '__module__' : 'kafkapixy_pb2'
    # @@protoc_insertion_point(class_scope:ListTopicRs.TopicsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTTOPICRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ListTopicRs)
  })
_sym_db.RegisterMessage(ListTopicRs)
_sym_db.RegisterMessage(ListTopicRs.TopicsEntry)

ListTopicRq = _reflection.GeneratedProtocolMessageType('ListTopicRq', (_message.Message,), {
  'DESCRIPTOR' : _LISTTOPICRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ListTopicRq)
  })
_sym_db.RegisterMessage(ListTopicRq)

ListConsumersRq = _reflection.GeneratedProtocolMessageType('ListConsumersRq', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONSUMERSRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ListConsumersRq)
  })
_sym_db.RegisterMessage(ListConsumersRq)

ConsumerPartitions = _reflection.GeneratedProtocolMessageType('ConsumerPartitions', (_message.Message,), {
  'DESCRIPTOR' : _CONSUMERPARTITIONS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ConsumerPartitions)
  })
_sym_db.RegisterMessage(ConsumerPartitions)

ConsumerGroups = _reflection.GeneratedProtocolMessageType('ConsumerGroups', (_message.Message,), {

  'ConsumersEntry' : _reflection.GeneratedProtocolMessageType('ConsumersEntry', (_message.Message,), {
    'DESCRIPTOR' : _CONSUMERGROUPS_CONSUMERSENTRY,
    '__module__' : 'kafkapixy_pb2'
    # @@protoc_insertion_point(class_scope:ConsumerGroups.ConsumersEntry)
    })
  ,
  'DESCRIPTOR' : _CONSUMERGROUPS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ConsumerGroups)
  })
_sym_db.RegisterMessage(ConsumerGroups)
_sym_db.RegisterMessage(ConsumerGroups.ConsumersEntry)

ListConsumersRs = _reflection.GeneratedProtocolMessageType('ListConsumersRs', (_message.Message,), {

  'GroupsEntry' : _reflection.GeneratedProtocolMessageType('GroupsEntry', (_message.Message,), {
    'DESCRIPTOR' : _LISTCONSUMERSRS_GROUPSENTRY,
    '__module__' : 'kafkapixy_pb2'
    # @@protoc_insertion_point(class_scope:ListConsumersRs.GroupsEntry)
    })
  ,
  'DESCRIPTOR' : _LISTCONSUMERSRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:ListConsumersRs)
  })
_sym_db.RegisterMessage(ListConsumersRs)
_sym_db.RegisterMessage(ListConsumersRs.GroupsEntry)

SetOffsetsRq = _reflection.GeneratedProtocolMessageType('SetOffsetsRq', (_message.Message,), {
  'DESCRIPTOR' : _SETOFFSETSRQ,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:SetOffsetsRq)
  })
_sym_db.RegisterMessage(SetOffsetsRq)

SetOffsetsRs = _reflection.GeneratedProtocolMessageType('SetOffsetsRs', (_message.Message,), {
  'DESCRIPTOR' : _SETOFFSETSRS,
  '__module__' : 'kafkapixy_pb2'
  # @@protoc_insertion_point(class_scope:SetOffsetsRs)
  })
_sym_db.RegisterMessage(SetOffsetsRs)

_KAFKAPIXY = DESCRIPTOR.services_by_name['KafkaPixy']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\021mailgun.kafkapixyB\016KafkaPixyProtoP\001Z(github.com/mailgun/kafka-pixy/gen/golang'
  _GETTOPICMETADATARS_CONFIGENTRY._options = None
  _GETTOPICMETADATARS_CONFIGENTRY._serialized_options = b'8\001'
  _LISTTOPICRS_TOPICSENTRY._options = None
  _LISTTOPICRS_TOPICSENTRY._serialized_options = b'8\001'
  _CONSUMERGROUPS_CONSUMERSENTRY._options = None
  _CONSUMERGROUPS_CONSUMERSENTRY._serialized_options = b'8\001'
  _LISTCONSUMERSRS_GROUPSENTRY._options = None
  _LISTCONSUMERSRS_GROUPSENTRY._serialized_options = b'8\001'
  _RECORDHEADER._serialized_start=19
  _RECORDHEADER._serialized_end=61
  _PRODRQ._serialized_start=64
  _PRODRQ._serialized_end=215
  _PRODRS._serialized_start=217
  _PRODRS._serialized_end=260
  _CONSNACKRQ._serialized_start=263
  _CONSNACKRQ._serialized_end=399
  _CONSRS._serialized_start=402
  _CONSRS._serialized_end=536
  _ACKRQ._serialized_start=538
  _ACKRQ._serialized_end=627
  _ACKRS._serialized_start=629
  _ACKRS._serialized_end=636
  _PARTITIONOFFSET._serialized_start=639
  _PARTITIONOFFSET._serialized_end=786
  _GETOFFSETSRQ._serialized_start=788
  _GETOFFSETSRQ._serialized_end=849
  _GETOFFSETSRS._serialized_start=851
  _GETOFFSETSRS._serialized_end=900
  _PARTITIONMETADATA._serialized_start=902
  _PARTITIONMETADATA._serialized_end=987
  _GETTOPICMETADATARQ._serialized_start=989
  _GETTOPICMETADATARQ._serialized_end=1066
  _GETTOPICMETADATARS._serialized_start=1069
  _GETTOPICMETADATARS._serialized_end=1242
  _GETTOPICMETADATARS_CONFIGENTRY._serialized_start=1197
  _GETTOPICMETADATARS_CONFIGENTRY._serialized_end=1242
  _LISTTOPICRS._serialized_start=1244
  _LISTTOPICRS._serialized_end=1367
  _LISTTOPICRS_TOPICSENTRY._serialized_start=1301
  _LISTTOPICRS_TOPICSENTRY._serialized_end=1367
  _LISTTOPICRQ._serialized_start=1369
  _LISTTOPICRQ._serialized_end=1424
  _LISTCONSUMERSRQ._serialized_start=1426
  _LISTCONSUMERSRQ._serialized_end=1490
  _CONSUMERPARTITIONS._serialized_start=1492
  _CONSUMERPARTITIONS._serialized_end=1532
  _CONSUMERGROUPS._serialized_start=1535
  _CONSUMERGROUPS._serialized_end=1673
  _CONSUMERGROUPS_CONSUMERSENTRY._serialized_start=1604
  _CONSUMERGROUPS_CONSUMERSENTRY._serialized_end=1673
  _LISTCONSUMERSRS._serialized_start=1675
  _LISTCONSUMERSRS._serialized_end=1802
  _LISTCONSUMERSRS_GROUPSENTRY._serialized_start=1740
  _LISTCONSUMERSRS_GROUPSENTRY._serialized_end=1802
  _SETOFFSETSRQ._serialized_start=1804
  _SETOFFSETSRQ._serialized_end=1900
  _SETOFFSETSRS._serialized_start=1902
  _SETOFFSETSRS._serialized_end=1916
  _KAFKAPIXY._serialized_start=1919
  _KAFKAPIXY._serialized_end=2280
# @@protoc_insertion_point(module_scope)
