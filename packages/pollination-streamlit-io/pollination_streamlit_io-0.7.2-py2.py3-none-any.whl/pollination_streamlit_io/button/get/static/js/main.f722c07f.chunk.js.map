{"version":3,"sources":["style.module.scss","GetGeometry.tsx","index.tsx"],"names":["module","exports","GetGeometry","state","ladybugGeometry","isPollinationModel","isFocused","render","className","styles","poButton","onClick","onClicked","disabled","props","onFocus","_onFocus","onBlur","_onBlur","style","margin","src","process","alt","args","window","parent","chrome","webview","console","log","isPo","updatedVal","hostObjects","sync","hbjson","PassPollinationModel","geometry","PassJsonGeometry","Geometry","setState","prevState","Streamlit","setComponentValue","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,SAAW,0B,4KCoBvBC,E,4MACGC,MAAQ,CAAEC,gBAAiB,GAClCC,oBAAoB,EACpBC,WAAW,G,EAEJC,OAAS,WAMd,OACE,8BACE,4BACEC,UAAWC,IAAOC,SAClBC,QAAS,EAAKC,UACdC,SAAU,EAAKC,MAAMD,SACrBE,QAAS,EAAKC,SACdC,OAAQ,EAAKC,SAEb,8BACE,yBAAKC,MAdI,CACfC,OAAQ,mBAaoBC,IAAKC,wBAAiDC,IAAI,UARpF,OAUQ,EAAKT,MAAMU,KAAX,mBAAwC,oBAAsB,c,EAMpEZ,UAAY,WAClB,GAAmC,oBAAxBa,OAAOC,OAAOC,OAAuB,CAC9C,GAA2C,oBAAhCF,OAAOC,OAAOC,OAAOC,QAG9B,YADAC,QAAQC,IAAI,2CAId,IAAIC,EAAO,EAAKjB,MAAMU,KAAX,mBAWPQ,GARCD,EAIGN,OAAOC,OAAOC,OAAOC,QAC1BK,YAAYC,KAAKC,OAAOC,uBAJnBX,OAAOC,OAAOC,OAAOC,QAC1BK,YAAYC,KAAKG,SAASC,oBAMRC,SAErB,EAAKC,UACH,SAACC,GAAD,mBAAC,eACIA,GADL,IAEErC,gBAAiB4B,EACjB3B,mBAAoB0B,OAEtB,kBAAMW,IAAUC,kBAAkB,EAAKxC,MAAMC,oBAE/CyB,QAAQC,IAAI,+CAIZD,QAAQC,IAAI,2C,EAIRd,SAAW,WACjB,EAAKwB,SAAS,CAAElC,WAAW,K,EAGrBY,QAAU,WAChB,EAAKsB,SAAS,CAAElC,WAAW,K,yBAvELsC,KA2EXC,cAAwB3C,GC5FvC4C,IAASvC,OACP,kBAAC,IAAMwC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f722c07f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"poButton\":\"style_poButton__3x8Ka\"};","import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\nimport styles from './style.module.scss';\r\n\r\ninterface State {\r\n  ladybugGeometry: string\r\n  isPollinationModel: boolean\r\n  isFocused: boolean\r\n}\r\n\r\ndeclare global {\r\n  interface Window {\r\n    chrome: any;\r\n  }\r\n}\r\n\r\nclass GetGeometry extends StreamlitComponentBase<State> {\r\n  public state = { ladybugGeometry: \"\", \r\n  isPollinationModel: false,\r\n  isFocused: false }\r\n\r\n  public render = (): ReactNode => {\r\n\r\n    const imgStyle = {\r\n      margin: \"0px 3px 2px 0px\"\r\n    }\r\n\r\n    return (\r\n      <span>\r\n        <button\r\n          className={styles.poButton}\r\n          onClick={this.onClicked}\r\n          disabled={this.props.disabled}\r\n          onFocus={this._onFocus}\r\n          onBlur={this._onBlur}\r\n        >\r\n          <span>\r\n            <img style={imgStyle} src={process.env.PUBLIC_URL + '/img/pollination.png'} alt=\"logo\" />\r\n          </span>\r\n          Get { this.props.args[\"isPollinationModel\"] ? \"Pollination Model\" : \"Geometry\" }\r\n        </button>\r\n      </span>\r\n    )\r\n  }\r\n\r\n  private onClicked = (): void => {\r\n    if (typeof window.parent.chrome != \"undefined\") {\r\n      if (typeof window.parent.chrome.webview == \"undefined\")\r\n      {\r\n        console.log('[POLLINATION-DEBUG]: webview not found.');\r\n        return;\r\n      }\r\n\r\n      let isPo = this.props.args[\"isPollinationModel\"]\r\n\r\n      let geo = null;\r\n      if (!isPo) {\r\n        geo = window.parent.chrome.webview\r\n        .hostObjects.sync.geometry.PassJsonGeometry();\r\n      } else {\r\n        geo = window.parent.chrome.webview\r\n        .hostObjects.sync.hbjson.PassPollinationModel();\r\n      }\r\n\r\n      let updatedVal = geo.Geometry;\r\n\r\n      this.setState(\r\n        (prevState) => ({ \r\n          ...prevState, \r\n          ladybugGeometry: updatedVal,\r\n          isPollinationModel: isPo\r\n        }),\r\n        () => Streamlit.setComponentValue(this.state.ladybugGeometry)\r\n      );\r\n      console.log('[POLLINATION-DEBUG]: JSON string sent.');\r\n    }\r\n    else\r\n    {\r\n      console.log('[POLLINATION-DEBUG]: chrome not found.');\r\n    }\r\n  }\r\n\r\n  private _onFocus = (): void => {\r\n    this.setState({ isFocused: true })\r\n  }\r\n\r\n  private _onBlur = (): void => {\r\n    this.setState({ isFocused: false })\r\n  }\r\n}\r\n\r\nexport default withStreamlitConnection(GetGeometry)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport GetGeometry from \"./GetGeometry\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <GetGeometry />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}