#!/usr/bin/env python3

import argparse
import os
import os.path
import sys

from solana.publickey import PublicKey

sys.path.insert(0, os.path.abspath(
    os.path.join(os.path.dirname(__file__), "..")))
import mango  # nopep8

parser = argparse.ArgumentParser(description="Cancels all orders on a perp market from the current wallet.")
mango.ContextBuilder.add_command_line_parameters(parser)
mango.Wallet.add_command_line_parameters(parser)
parser.add_argument("--market", type=str, required=True, help="market symbol where orders are placed (e.g. ETH/USDC)")
parser.add_argument("--account-address", type=PublicKey,
                    help="address of the specific account to use, if more than one available")
parser.add_argument("--dry-run", action="store_true", default=False,
                    help="runs as read-only and does not perform any transactions")
args: argparse.Namespace = mango.parse_args(parser)

context = mango.ContextBuilder.from_command_line_parameters(args)
wallet = mango.Wallet.from_command_line_parameters_or_raise(args)
group = mango.Group.load(context, context.group_address)
account = mango.Account.load_for_owner_by_address(context, wallet.address, group, args.account_address)

market_stub = context.market_lookup.find_by_symbol(args.market)
if market_stub is None:
    raise Exception(f"Could not find market {args.market}")

market = mango.ensure_market_loaded(context, market_stub)
if not isinstance(market, mango.PerpMarket):
    raise Exception(f"Market {market.symbol} is not a perp market.")

instruction_builder: mango.PerpMarketInstructionBuilder
if args.dry_run:
    mango.output("Dry run - no cancellations performed.")
else:
    instruction_builder = mango.PerpMarketInstructionBuilder(context, wallet, group, account, market)
    cancel_all = instruction_builder.build_cancel_all_orders_instructions()

    signers: mango.CombinableInstructions = mango.CombinableInstructions.from_wallet(wallet)
    transaction_ids = (signers + cancel_all).execute(context)
    mango.output("Transaction IDs:", transaction_ids)
