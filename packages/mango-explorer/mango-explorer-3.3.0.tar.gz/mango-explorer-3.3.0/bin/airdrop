#!/usr/bin/env python3

import argparse
import os
import os.path
import sys

from decimal import Decimal
from spl.token.client import Token as SolanaSPLToken
from spl.token.constants import TOKEN_PROGRAM_ID
from solana.publickey import PublicKey

sys.path.insert(0, os.path.abspath(
    os.path.join(os.path.dirname(__file__), '..')))
import mango  # nopep8

parser = argparse.ArgumentParser(description="mint SPL tokens to your wallet")
mango.ContextBuilder.add_command_line_parameters(parser)
mango.Wallet.add_command_line_parameters(parser)
parser.add_argument("--symbol", type=str, required=True, help="token symbol to airdrop (e.g. USDC)")
parser.add_argument("--faucet", type=PublicKey, required=True, help="public key of the faucet")
parser.add_argument("--quantity", type=Decimal, required=True, help="quantity token to airdrop")
args: argparse.Namespace = mango.parse_args(parser)

context = mango.ContextBuilder.from_command_line_parameters(args)
wallet = mango.Wallet.from_command_line_parameters_or_raise(args)

instrument = context.instrument_lookup.find_by_symbol(args.symbol)
if instrument is None:
    raise Exception(f"Could not find instrument with symbol '{args.symbol}'.")
token: mango.Token = mango.Token.ensure(instrument)

spl_token = SolanaSPLToken(context.client.compatible_client, token.mint, TOKEN_PROGRAM_ID, wallet.keypair)

# This is a root wallet account - get the associated token account
destination: PublicKey = mango.TokenAccount.find_or_create_token_address_to_use(
    context, wallet, wallet.address, token)

quantity = token.shift_to_native(args.quantity)

signers: mango.CombinableInstructions = mango.CombinableInstructions.from_wallet(wallet)

mango.output(f"Airdropping {args.quantity} {args.symbol} to {destination}")
airdrop = mango.build_faucet_airdrop_instructions(token.mint, destination, args.faucet, quantity)

all_instructions = signers + airdrop
transaction_ids = all_instructions.execute(context)
mango.output("Transaction IDs:", transaction_ids)
