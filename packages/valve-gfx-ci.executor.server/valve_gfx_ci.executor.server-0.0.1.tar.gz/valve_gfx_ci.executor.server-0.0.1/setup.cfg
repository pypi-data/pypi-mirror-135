[metadata]
name = valve_gfx_ci.executor.server
version = 0.0.1
author = Martin Roukala
author_email = martin.roukala@mupuf.org
description = Valve GFX CI's executor
long_description = file: README.md
long_description_content_type = text/markdown
url = https://gitlab.freedesktop.org/mupuf/valve-infra/-/tree/master/executor/server
project_urls = 
	Bug Tracker = https://gitlab.freedesktop.org/mupuf/valve-infra/issues
classifiers = 
	Programming Language :: Python :: 3
	License :: OSI Approved :: MIT License
	Operating System :: OS Independent

[options]
package_dir = 
	= src
install_requires = 
	backports.cached-property;python_version<'3.8'
	requests>=2,<3
	easysnmp==0.2.5
	Flask>=1,<2
	marshmallow>=3.12,<3.13
	pydantic>=1,<2
	python-dateutil>=2.8,<3
	PyYAML>=5,<6
	minio>=7.0,<7.1
	inotify-simple==1.3.5
tests_requires = 
	freezegun==1.1.0
	responses
	coverage
	pytest
include_package_data = True
packages = find_namespace:
python_requires = >=3.6

[options.packages.find]
where = src

[options.entry_points]
console_scripts = 
	executor = valve_gfx_ci.executor.server.app:run

[pycodestyle]
max-line-length = 160

[tox:tox]
envlist = pep8,py39-coverage
skipsdist = True

[testenv:pep8]
deps = flake8
commands = flake8 .

[flake8]
exclude = .tox, .git, __pycache__, .venv
max-line-length = 120

[testenv:py39-coverage]
sitepackages = true
basepython = python3.9
setenv = 
	COVERAGE_PROCESS_START=./.coveragerc
deps = 
	{[options]install_requires}
	{[options]tests_requires}
commands = 
	coverage erase
	coverage run --parallel-mode --source=src/valve_gfx_ci/executor/server/ -m pytest -o "testpaths=src/valve_gfx_ci/executor/server/tests"
	coverage combine
	coverage html
	coverage report --fail-under 100 -m --omit="src/valve_gfx_ci/executor/server/app.py,src/valve_gfx_ci/executor/server/executor.py,src/valve_gfx_ci/executor/server/mars.py"

[egg_info]
tag_build = 
tag_date = 0

