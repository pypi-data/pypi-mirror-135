{"version":3,"sources":["services/models/bookmarks/bookmarksAppModel.ts","pages/Bookmarks/components/BookmarkCard/BookmarkCard.tsx","pages/Bookmarks/Bookmarks.tsx","pages/Bookmarks/BookmarksContainer.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","config/colors/colors.ts","assets/icons/noData.svg","components/EmptyComponent/EmptyComponent.tsx","services/api/apps/appsService.ts","services/api/dashboard/dashboardService.ts","components/AppBar/AppBar.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","components/ConfirmModal/ConfirmModal.tsx","components/CopyToClipBoard/CopyToClipBoard.tsx","components/CodeBlock/CodeBlock.tsx"],"names":["model","createModel","isLoading","listData","id","a","setState","dashboardService","deleteDashboard","call","getState","newListData","filter","bookmark","analytics","console","log","bookmarkAppModel","initialize","init","getBookmarksData","fetchDashboardsList","then","data","appsService","fetchAppsList","appsList","map","item","app","find","appData","app_id","select","state","type","abort","onBookmarkDelete","BookmarkIconType","images","params","metrics","scatters","BookmarkCard","name","description","React","useState","openModal","setOpenModal","tags","useMemo","val","label","ErrorBoundary","className","fontSize","size","weight","component","tint","to","variant","onClick","color","withOnlyIcon","advancedMode","CodeBlock","code","advancedQuery","query","length","tag","index","COLORS","ConfirmModal","open","onCancel","onSubmit","text","icon","title","statusType","confirmBtnText","Bookmarks","AppBar","BusyLoaderWrapper","EmptyComponent","content","BookmarksContainer","bookmarksRequestRef","useRef","bookmarksData","useModel","useEffect","current","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError","img","src","noData","alt","memo","endpoints","APPS","API","get","fetchApp","createApp","reqBody","post","updateApp","put","deleteApp","delete","DASHBOARD","createDashboard","headers","fetchDashboard","updateDashboard","props","children","_iterableToArray","iter","Symbol","iterator","Object","from","onClose","aria-labelledby","aria-describedby","PaperProps","elevation","cancelBtnText","autoFocus","defaultProps","displayName","CopyToClipboard","contentRef","showSuccessDelay","showCopiedIcon","setShowCopiedIcon","setTimeout","onCopy","useCallback","navigator","clipboard","writeText","innerText","trim","catch","style","language","createRef","theme","tokens","getLineProps","getTokenProps","ref","line","i","key","token","CopyToClipBoard"],"mappings":"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","file":"static/js/bookmarks.js?version=f5459c3694ef6aa8c542","sourcesContent":["import dashboardService from 'services/api/dashboard/dashboardService';\nimport appsService from 'services/api/apps/appsService';\nimport * as analytics from 'services/analytics';\n\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\nimport { IBookmarksData } from 'types/pages/bookmarks/Bookmarks';\n\nimport createModel from '../model';\n\nconst model = createModel<Partial<IBookmarksAppModelState>>({\n  isLoading: true,\n  listData: [],\n});\n\nfunction getBookmarksData() {\n  const { call, abort } = dashboardService.fetchDashboardsList();\n  return {\n    call: () =>\n      call().then(async (data: any) => {\n        const appsList = await appsService.fetchAppsList().call();\n        const listData = data.map((item: any) => {\n          const app = appsList.find(\n            (appData: any) => appData.id === item.app_id,\n          );\n          return { ...item, select: app.state.select, type: app.type };\n        });\n        model.setState({\n          isLoading: false,\n          listData,\n        });\n      }),\n    abort,\n  };\n}\n\nasync function onBookmarkDelete(id: string) {\n  try {\n    model.setState({ isLoading: true });\n    await dashboardService.deleteDashboard(id).call();\n    const listData: IBookmarksData[] | any = model.getState()?.listData;\n    const newListData = [...listData].filter((bookmark) => bookmark.id !== id);\n    model.setState({\n      listData: newListData,\n      isLoading: false,\n    });\n    analytics.trackEvent('[Bookmarks] Delete a bookmark');\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction initialize() {\n  model.init();\n}\nconst bookmarkAppModel = {\n  ...model,\n  initialize,\n  getBookmarksData,\n  onBookmarkDelete,\n};\n\nexport default bookmarkAppModel;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport ConfirmModal from 'components/ConfirmModal/ConfirmModal';\nimport CodeBlock from 'components/CodeBlock/CodeBlock';\nimport { Button, Icon, Badge, Text } from 'components/kit';\nimport { IconName } from 'components/kit/Icon';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport COLORS from 'config/colors/colors';\n\nimport * as analytics from 'services/analytics';\n\nimport { IBookmarkCardProps } from 'types/pages/bookmarks/components/BookmarkCard';\n\nimport './BookmarkCard.scss';\n\nconst BookmarkIconType: { [key: string]: IconName } = {\n  images: 'images',\n  params: 'params',\n  metrics: 'metrics',\n  scatters: 'scatterplot',\n};\n\nfunction BookmarkCard({\n  name,\n  id,\n  app_id,\n  description,\n  onBookmarkDelete,\n  select,\n  type,\n}: IBookmarkCardProps): React.FunctionComponentElement<React.ReactNode> {\n  const [openModal, setOpenModal] = React.useState<boolean>(false);\n\n  function handleOpenModal(): void {\n    setOpenModal(true);\n  }\n  function handleCloseModal(): void {\n    setOpenModal(false);\n  }\n\n  function handleBookmarkDelete(): void {\n    onBookmarkDelete(id);\n  }\n\n  const tags: { label: string }[] = React.useMemo(() => {\n    return select[type]?.map((val: any) => ({ label: val.label })) || [];\n  }, [select]);\n\n  return (\n    <ErrorBoundary>\n      <div className='BookmarkCard'>\n        <div className='BookmarkCard__top'>\n          <div className='BookmarkCard__title__section'>\n            <div className='BookmarkCard__title__section__container'>\n              <Icon name={BookmarkIconType[type]} fontSize={16} />\n              <Text size={18} weight={600} component='h3' tint={100}>\n                {name}\n              </Text>\n            </div>\n            <div className='flex fac fjc'>\n              <NavLink to={`/${type}/${app_id}`}>\n                <Button\n                  variant='outlined'\n                  onClick={() =>\n                    analytics.trackEvent('[Bookmarks] View bookmark')\n                  }\n                >\n                  View Bookmark\n                </Button>\n              </NavLink>\n              <span className='BookmarkCard__delete'>\n                <Button\n                  color='secondary'\n                  withOnlyIcon\n                  onClick={handleOpenModal}\n                >\n                  <Icon name='delete' />\n                </Button>\n              </span>\n            </div>\n          </div>\n          <Text size={12} weight={400} tint={100} component='p'>\n            {description}\n          </Text>\n        </div>\n        {select.advancedMode ? (\n          <div className='BookmarkCard__bottom'>\n            <div className='BookmarkCard__run__expression'>\n              <CodeBlock code={select.advancedQuery} />\n            </div>\n          </div>\n        ) : (\n          <>\n            {select.query && (\n              <div className='BookmarkCard__bottom'>\n                <div className='BookmarkCard__run__expression'>\n                  <CodeBlock code={select.query} />\n                </div>\n              </div>\n            )}\n            {tags.length > 0 && (\n              <div className='BookmarkCard__selected__metrics ScrollBar__hidden'>\n                {tags.map((tag, index) => {\n                  return (\n                    <Badge\n                      size='large'\n                      key={tag.label}\n                      label={tag.label}\n                      color={COLORS[0][index % COLORS[0].length]}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </>\n        )}\n        <ConfirmModal\n          open={openModal}\n          onCancel={handleCloseModal}\n          onSubmit={handleBookmarkDelete}\n          text='Are you sure you want to delete this bookmark?'\n          icon={<Icon name='delete' />}\n          title='Are you sure?'\n          statusType='error'\n          confirmBtnText='Delete'\n        />\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarkCard;\n","import React from 'react';\n\nimport AppBar from 'components/AppBar/AppBar';\nimport BusyLoaderWrapper from 'components/BusyLoaderWrapper/BusyLoaderWrapper';\nimport EmptyComponent from 'components/EmptyComponent/EmptyComponent';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IBookmarksProps } from 'types/pages/bookmarks/Bookmarks';\n\nimport BookmarkCard from './components/BookmarkCard/BookmarkCard';\n\nimport './Bookmarks.scss';\n\nfunction Bookmarks({\n  data,\n  onBookmarkDelete,\n  isLoading,\n}: IBookmarksProps): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <section className='Bookmarks'>\n        <AppBar title='Bookmarks' />\n        <div className='Bookmarks__list container'>\n          <BusyLoaderWrapper isLoading={isLoading}>\n            {data?.length > 0 &&\n              data.map((bookmark) => (\n                <BookmarkCard\n                  key={bookmark.id}\n                  {...bookmark}\n                  onBookmarkDelete={onBookmarkDelete}\n                />\n              ))}\n          </BusyLoaderWrapper>\n          {!isLoading && data?.length === 0 ? (\n            <EmptyComponent size='big' content={'No Bookmarks'} />\n          ) : null}\n        </div>\n      </section>\n    </ErrorBoundary>\n  );\n}\n\nexport default Bookmarks;\n","import React from 'react';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport useModel from 'hooks/model/useModel';\n\nimport bookmarkAppModel from 'services/models/bookmarks/bookmarksAppModel';\nimport * as analytics from 'services/analytics';\n\nimport { IBookmarksAppModelState } from 'types/services/models/bookmarks/bookmarksAppModel';\n\nimport Bookmarks from './Bookmarks';\n\nfunction BookmarksContainer(): React.FunctionComponentElement<React.ReactNode> {\n  const bookmarksRequestRef = React.useRef(bookmarkAppModel.getBookmarksData());\n  const bookmarksData = useModel(bookmarkAppModel);\n\n  React.useEffect(() => {\n    bookmarkAppModel.initialize();\n    bookmarksRequestRef.current.call();\n    analytics.pageView('[Bookmarks]');\n    return () => {\n      bookmarksRequestRef.current.abort();\n    };\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Bookmarks\n        data={bookmarksData?.listData as IBookmarksAppModelState['listData']}\n        isLoading={bookmarksData?.isLoading as boolean}\n        onBookmarkDelete={bookmarkAppModel.onBookmarkDelete}\n      />\n    </ErrorBoundary>\n  );\n}\n\nexport default BookmarksContainer;\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","const COLORS: Array<string[]> = [\n  [\n    '#3E72E7',\n    '#18AB6D',\n    '#7A4CE0',\n    '#E149A0',\n    '#E43D3D',\n    '#E8853D',\n    '#0394B4',\n    '#729B1B',\n  ],\n  [\n    '#336699',\n    '#339966',\n    '#993399',\n    '#999966',\n    '#669966',\n    '#663333',\n    '#669999',\n    '#663366',\n    '#666633',\n    '#996666',\n    '#999933',\n    '#669933',\n    '#663399',\n    '#666699',\n    '#993366',\n    '#996633',\n    '#996699',\n    '#339999',\n    '#333366',\n    '#336633',\n    '#333399',\n    '#339933',\n    '#336666',\n    '#FD7272',\n  ],\n];\n\nexport default COLORS;\n","export default __webpack_public_path__ + \"static/media/noData.3ca2c2cf.svg\";","import React, { memo } from 'react';\n\nimport noData from 'assets/icons/noData.svg';\n\nimport './EmptyComponent.scss';\n\nfunction EmptyComponent({\n  title,\n  content = 'No Data',\n  img,\n  className = '',\n  size = 'small',\n}: any): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <div className={`EmptyComponent ${className}`}>\n      <div className={`EmptyComponent__${size}__img`}>\n        {img || <img src={noData} alt='' />}\n      </div>\n      <p className={`EmptyComponent__${size}__title`}>{title}</p>\n      <p className={`EmptyComponent__${size}__content`}>{content}</p>\n    </div>\n  );\n}\n\nexport default memo(EmptyComponent);\n","import { IAppData } from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nimport API from '../api';\n\nconst endpoints = {\n  APPS: 'apps',\n};\n\nfunction fetchAppsList(): IApiRequest<IAppData[]> {\n  return API.get(endpoints.APPS);\n}\n\nfunction fetchApp(id: string): IApiRequest<IAppData> {\n  return API.get(`${endpoints.APPS}/${id}`);\n}\n\nfunction createApp(reqBody: IAppData): IApiRequest<IAppData> {\n  return API.post(endpoints.APPS, reqBody);\n}\n\nfunction updateApp(id: string, reqBody: IAppData): IApiRequest<IAppData> {\n  return API.put(`${endpoints.APPS}/${id}`, reqBody);\n}\n\nfunction deleteApp(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.APPS}/${id}`);\n}\nconst appsService = {\n  endpoints,\n  fetchAppsList,\n  fetchApp,\n  createApp,\n  updateApp,\n  deleteApp,\n};\n\nexport default appsService;\n","import {\n  IAppData,\n  IDashboardRequestBody,\n} from 'types/services/models/metrics/metricsAppModel';\nimport { IApiRequest } from 'types/services/services';\n\nimport API from '../api';\n\nconst endpoints = {\n  DASHBOARD: 'dashboards',\n};\n\nfunction fetchDashboardsList(): IApiRequest<any> {\n  return API.get(endpoints.DASHBOARD);\n}\n\nfunction fetchDashboard(id: string): IApiRequest<any> {\n  return API.get(`${endpoints.DASHBOARD}/${id}`);\n}\n\nfunction createDashboard(\n  reqBody: IDashboardRequestBody,\n): IApiRequest<IAppData> {\n  return API.post(endpoints.DASHBOARD, reqBody, {\n    headers: { 'Content-type': 'application/json' },\n  });\n}\n\nfunction updateDashboard(\n  id: string,\n  reqBody: IDashboardRequestBody,\n): IApiRequest<any> {\n  return API.put(`${endpoints.DASHBOARD}/${id}`, reqBody);\n}\n\nfunction deleteDashboard(id: string): IApiRequest<any> {\n  return API.delete(`${endpoints.DASHBOARD}/${id}`);\n}\n\nconst dashboardService = {\n  endpoints,\n  createDashboard,\n  fetchDashboardsList,\n  fetchDashboard,\n  updateDashboard,\n  deleteDashboard,\n};\n\nexport default dashboardService;\n","import React from 'react';\n\nimport { Text } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IAppBarProps } from 'types/components/AppBar/AppBar';\n\nimport './AppBar.scss';\n\nfunction AppBar(\n  props: IAppBarProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <div className='AppBar'>\n        <Text\n          component='h3'\n          weight={600}\n          size={14}\n          tint={100}\n          className='AppBar__title'\n        >\n          {props.title}\n        </Text>\n        {props.children && (\n          <div className={`AppBar__content ${props.className || ''}`}>\n            {props.children}\n          </div>\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default AppBar;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","import React from 'react';\n\nimport { Dialog } from '@material-ui/core';\n\nimport { Button, Text, Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { IConfirmModalProps } from 'types/components/ConfirmModal/ConfirmModal';\n\nimport './ConfirmModal.scss';\n\nfunction ConfirmModal(\n  props: IConfirmModalProps,\n): React.FunctionComponentElement<React.ReactNode> {\n  return (\n    <ErrorBoundary>\n      <Dialog\n        open={props.open}\n        onClose={props.onCancel}\n        aria-labelledby='dialog-title'\n        aria-describedby='dialog-description'\n        PaperProps={{\n          elevation: 10,\n        }}\n        className={`ConfirmModal ConfirmModal__${props.statusType}`}\n      >\n        <div className='ConfirmModal__Body'>\n          <Button\n            size='small'\n            className='ConfirmModal__Close__Icon'\n            color='secondary'\n            withOnlyIcon\n            onClick={props.onCancel}\n          >\n            <Icon name='close' />\n          </Button>\n\n          <div className='ConfirmModal__Title__Container'>\n            <div className='ConfirmModal__Icon'>{props.icon}</div>\n            {props.title && (\n              <Text size={16} tint={100} component='h4' weight={600}>\n                {props.title}\n              </Text>\n            )}\n          </div>\n\n          <div>\n            {props.text && (\n              <Text\n                size={14}\n                className='ConfirmModal__description'\n                weight={400}\n                component='p'\n                id='dialog-description'\n              >\n                {props.text || ''}\n              </Text>\n            )}\n            {props.children && props.children}\n          </div>\n        </div>\n\n        <div className='ConfirmModal__Footer'>\n          <Button\n            onClick={props.onCancel}\n            className='ConfirmModal__CancelButton'\n          >\n            {props.cancelBtnText}\n          </Button>\n\n          <Button\n            onClick={props.onSubmit}\n            color='primary'\n            variant='contained'\n            className='ConfirmModal__ConfirmButton'\n            autoFocus\n          >\n            {props.confirmBtnText}\n          </Button>\n        </div>\n      </Dialog>\n    </ErrorBoundary>\n  );\n}\n\nConfirmModal.defaultProps = {\n  confirmBtnText: 'Confirm',\n  cancelBtnText: 'Cancel',\n  statusType: 'info',\n};\n\nConfirmModal.displayName = 'ConfirmModal';\n\nexport default React.memo<IConfirmModalProps>(ConfirmModal);\n","import React from 'react';\n\nimport { Icon } from 'components/kit';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ICopyToClipBoardProps } from 'types/components/CopyToClipBoard/CopyToClipBoard';\n\nfunction CopyToClipboard({\n  contentRef,\n  showSuccessDelay = 1500,\n  className = '',\n}: ICopyToClipBoardProps): React.FunctionComponentElement<ICopyToClipBoardProps> {\n  const [showCopiedIcon, setShowCopiedIcon] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (showCopiedIcon) {\n      setTimeout(() => {\n        setShowCopiedIcon(false);\n      }, showSuccessDelay);\n    }\n  }, [showCopiedIcon]);\n\n  const onCopy = React.useCallback(() => {\n    if (contentRef.current && !showCopiedIcon) {\n      navigator.clipboard\n        .writeText(contentRef.current.innerText.trim(''))\n        .then(function () {\n          setShowCopiedIcon(true);\n        })\n        .catch();\n    }\n  }, [contentRef, showCopiedIcon]);\n\n  return (\n    <ErrorBoundary>\n      <span className={className} onClick={onCopy}>\n        {showCopiedIcon ? (\n          <span style={{ color: 'green', fontSize: 12 }}>Copied!</span>\n        ) : (\n          <Icon name='copy' />\n        )}\n      </span>\n    </ErrorBoundary>\n  );\n}\n\nCopyToClipboard.displayName = 'CopyToClipBoard';\n\nexport default React.memo<ICopyToClipBoardProps>(CopyToClipboard);\n","import React from 'react';\n// import AssignmentTurnedInOutlinedIcon from '@material-kit/icons/AssignmentTurnedInOutlined';\nimport Highlight, { defaultProps } from 'prism-react-renderer';\n\nimport theme from 'prism-react-renderer/themes/nightOwlLight';\n\nimport CopyToClipBoard from 'components/CopyToClipBoard/CopyToClipBoard';\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\n\nimport { ICodeBlockProps } from 'types/components/CodeBlock/CodeBlock';\n\nimport './CodeBlock.scss';\n\nfunction CodeBlock({\n  code = '',\n  className = '',\n  language = 'python',\n}: ICodeBlockProps): React.FunctionComponentElement<React.ReactNode> {\n  const contentRef = React.createRef<HTMLPreElement>();\n  return (\n    <ErrorBoundary>\n      <div className={`CodeBlock ${className}`}>\n        <Highlight\n          {...defaultProps}\n          theme={theme}\n          code={code.trim()}\n          language={language}\n        >\n          {({ className, style, tokens, getLineProps, getTokenProps }) => (\n            <pre className={className} style={style} ref={contentRef}>\n              {tokens.map((line, i) => (\n                <div key={i} {...getLineProps({ line, key: i })}>\n                  {line.map((token, key) => (\n                    <span key={key} {...getTokenProps({ token, key })} />\n                  ))}\n                </div>\n              ))}\n            </pre>\n          )}\n        </Highlight>\n        <ErrorBoundary>\n          <CopyToClipBoard\n            className='CodeBlock__copy__span'\n            contentRef={contentRef}\n          />\n        </ErrorBoundary>\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nexport default React.memo(CodeBlock);\n"],"sourceRoot":""}