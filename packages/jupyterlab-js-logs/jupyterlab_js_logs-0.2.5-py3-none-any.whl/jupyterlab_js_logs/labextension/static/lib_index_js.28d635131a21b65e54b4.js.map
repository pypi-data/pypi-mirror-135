{"version":3,"sources":["webpack://jupyterlab-js-logs/./lib/index.js","webpack://jupyterlab-js-logs/./lib/logLevelSwitcher.js","webpack://jupyterlab-js-logs/./style/js.svg"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAA0D;AACkD;AACnC;AACZ;AACW;AACtB;AACV;AACxC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uEAAmB;AAClC,eAAe,iEAAe,EAAE,oEAAe;AAC/C;AACA,eAAe,WAAW;AAC1B;AACA;AACA,4BAA4B,+DAAa;AACzC;AACA,SAAS;AACT,2BAA2B,8DAAO;AAClC;AACA,oBAAoB,kDAAS;AAC7B,SAAS;AACT;AACA,kCAAkC,mEAAe,KAAK,kEAAc;AACpE;AACA;AACA,aAAa;AACb;AACA,mCAAmC,gEAAc;AACjD;AACA,aAAa;AACb;AACA;AACA;AACA,+DAA+D,sEAAoB;AACnF;AACA;AACA,aAAa;AACb,0DAA0D,sEAAoB;AAC9E;AACA;AACA,aAAa;AACb,0DAA0D,sDAAgB;AAC1E;AACA;AACA;AACA;AACA,aAAa;AACb,qDAAqD,uBAAuB;AAC5E;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ,6JAA6J,EAAE;AACnM,kBAAkB,8DAAO;AACzB;AACA;AACA,SAAS;AACT;AACA,4BAA4B,QAAQ,wJAAwJ,EAAE;AAC9L,kBAAkB,gEAAS;AAC3B;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+CAA+C,WAAW;AAC1D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yBAAyB,IAAI,GAAG,OAAO,GAAG,IAAI,IAAI,MAAM;AACxD,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ,IAAI,gBAAgB;AAChE,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iEAAe,SAAS,EAAC;;;;;;;;;;;;;;;;;;;;;;;;AChP0B;AACI;AACd;AACf;AAC1B;AACA;AACA;AACe,+BAA+B,6DAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,yDAAU,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,0DAAmB,CAAC,uDAAc;AAClD,YAAY,0DAAmB,WAAW;AAC1C;AACA,iCAAiC;AACjC,YAAY,0DAAmB,CAAC,iEAAU,GAAG;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,oCAAoC,IAAI;AAC7E;AACA;;;;;;;;;;;;;;;;ACzEA,iEAAe,gsBAAgsB,E","file":"lib_index_js.28d635131a21b65e54b4.js","sourcesContent":["import { ILayoutRestorer } from '@jupyterlab/application';\nimport { ICommandPalette, MainAreaWidget, WidgetTracker, CommandToolbarButton } from '@jupyterlab/apputils';\nimport { LoggerRegistry, LogConsolePanel } from '@jupyterlab/logconsole';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { addIcon, clearIcon, LabIcon } from '@jupyterlab/ui-components';\nimport LogLevelSwitcher from './logLevelSwitcher';\nimport jsIconStr from '../style/js.svg';\n/**\n * The command IDs used by the js-logs plugin.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.checkpoint = 'js-logs:checkpoint';\n    CommandIDs.clear = 'js-logs:clear';\n    CommandIDs.level = 'js-logs:level';\n    CommandIDs.open = 'js-logs:open';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * The main jupyterlab-js-logs plugin.\n */\nconst extension = {\n    id: 'js-logs',\n    autoStart: true,\n    requires: [IRenderMimeRegistry],\n    optional: [ICommandPalette, ILayoutRestorer],\n    activate: (app, rendermime, palette, restorer) => {\n        const { commands } = app;\n        let logConsolePanel = null;\n        let logConsoleWidget = null;\n        const tracker = new WidgetTracker({\n            namespace: 'jupyterlab-js-logs'\n        });\n        const jsIcon = new LabIcon({\n            name: 'js-logs:js-icon',\n            svgstr: jsIconStr\n        });\n        const createLogConsoleWidget = () => {\n            logConsolePanel = new LogConsolePanel(new LoggerRegistry({\n                defaultRendermime: rendermime,\n                maxLength: 1000\n            }));\n            logConsolePanel.source = 'js-logs';\n            logConsoleWidget = new MainAreaWidget({\n                content: logConsolePanel\n            });\n            logConsoleWidget.addClass('jp-LogConsole');\n            logConsoleWidget.title.label = 'Dev Tools Console Logs';\n            logConsoleWidget.title.icon = jsIcon;\n            logConsoleWidget.toolbar.addItem('checkpoint', new CommandToolbarButton({\n                commands,\n                id: CommandIDs.checkpoint\n            }));\n            logConsoleWidget.toolbar.addItem('clear', new CommandToolbarButton({\n                commands,\n                id: CommandIDs.clear\n            }));\n            logConsoleWidget.toolbar.addItem('level', new LogLevelSwitcher(logConsoleWidget.content));\n            logConsoleWidget.disposed.connect(() => {\n                logConsoleWidget = null;\n                logConsolePanel = null;\n                commands.notifyCommandChanged();\n            });\n            app.shell.add(logConsoleWidget, 'main', { mode: 'split-bottom' });\n            void tracker.add(logConsoleWidget);\n            logConsoleWidget.update();\n            commands.notifyCommandChanged();\n        };\n        commands.addCommand(CommandIDs.checkpoint, {\n            execute: () => { var _a; return (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.checkpoint(); },\n            icon: addIcon,\n            isEnabled: () => (logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.source) !== null,\n            label: 'Add Checkpoint'\n        });\n        commands.addCommand(CommandIDs.clear, {\n            execute: () => { var _a; return (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.clear(); },\n            icon: clearIcon,\n            isEnabled: () => (logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.source) !== null,\n            label: 'Clear Log'\n        });\n        commands.addCommand(CommandIDs.level, {\n            execute: (args) => {\n                if (logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) {\n                    logConsolePanel.logger.level = args.level;\n                }\n            },\n            isEnabled: () => (logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.source) !== null,\n            label: args => `Set Log Level to ${args.level}`\n        });\n        commands.addCommand(CommandIDs.open, {\n            label: 'Show Dev Tools Console Logs',\n            caption: 'Show Dev Tools Console Logs',\n            isToggled: () => logConsoleWidget !== null,\n            execute: () => {\n                if (logConsoleWidget) {\n                    logConsoleWidget.dispose();\n                }\n                else {\n                    createLogConsoleWidget();\n                }\n            }\n        });\n        window.onerror = (msg, url, lineNo, columnNo, error) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'critical',\n                data: `${url}:${lineNo} ${msg}\\n${error}`\n            });\n            return false;\n        };\n        const _debug = console.debug;\n        const _log = console.log;\n        const _info = console.info;\n        const _warn = console.warn;\n        const _error = console.error;\n        const _exception = console.exception;\n        const _trace = console.trace;\n        const _table = console.table;\n        // https://stackoverflow.com/a/11616993\n        // We need to clear cache after each use.\n        let cache = [];\n        const refReplacer = (key, value) => {\n            if (typeof value === 'object' && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    return;\n                }\n                cache.push(value);\n            }\n            return value;\n        };\n        const parseArgs = (args) => {\n            let data = '';\n            args.forEach(arg => {\n                try {\n                    data +=\n                        (typeof arg === 'object' && arg !== null\n                            ? JSON.stringify(arg)\n                            : arg) + ' ';\n                }\n                catch (e) {\n                    try {\n                        const msg = 'This error contains a object with a circular reference. Duplicated attributes might have been dropped during the process of removing the reference.\\n';\n                        const obj = JSON.stringify(arg, refReplacer);\n                        cache = [];\n                        console.error(msg, obj);\n                        data += obj;\n                    }\n                    catch (e) {\n                        data += ' ';\n                    }\n                }\n            });\n            return data;\n        };\n        window.console.debug = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'debug',\n                data: parseArgs(args)\n            });\n            _debug(...args);\n        };\n        window.console.log = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'debug',\n                data: parseArgs(args)\n            });\n            _log(...args);\n        };\n        window.console.info = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'info',\n                data: parseArgs(args)\n            });\n            _info(...args);\n        };\n        window.console.warn = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'warning',\n                data: parseArgs(args)\n            });\n            _warn(...args);\n        };\n        window.console.error = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'critical',\n                data: parseArgs(args)\n            });\n            _error(...args);\n        };\n        window.console.exception = (message, ...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'critical',\n                data: `Exception: ${message}\\n${parseArgs(args)}`\n            });\n            _exception(...args);\n        };\n        window.console.trace = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'info',\n                data: parseArgs(args)\n            });\n            _trace(...args);\n        };\n        window.console.table = (...args) => {\n            var _a;\n            (_a = logConsolePanel === null || logConsolePanel === void 0 ? void 0 : logConsolePanel.logger) === null || _a === void 0 ? void 0 : _a.log({\n                type: 'text',\n                level: 'info',\n                data: parseArgs(args)\n            });\n            _table(...args);\n        };\n        if (palette) {\n            palette.addItem({\n                command: CommandIDs.open,\n                category: 'Developer'\n            });\n        }\n        if (restorer) {\n            restorer.restore(tracker, {\n                command: CommandIDs.open,\n                name: () => 'js-logs'\n            });\n        }\n    }\n};\nexport default extension;\n","import { ReactWidget } from '@jupyterlab/apputils';\nimport { HTMLSelect } from '@jupyterlab/ui-components';\nimport { UUID } from '@lumino/coreutils';\nimport React from 'react';\n/**\n * A toolbar widget that switches log levels.\n */\nexport default class LogLevelSwitcher extends ReactWidget {\n    /**\n     * Construct a new cell type switcher.\n     *\n     * @param widget The log console panel\n     */\n    constructor(widget) {\n        super();\n        /**\n         * Handle `change` events for the HTMLSelect component.\n         *\n         * @param event The HTML select event.\n         */\n        this.handleChange = (event) => {\n            if (this._logConsole.logger) {\n                this._logConsole.logger.level = event.target.value;\n            }\n            this.update();\n        };\n        /**\n         * Handle `keydown` events for the HTMLSelect component.\n         *\n         * @param event The keyboard event.\n         */\n        this.handleKeyDown = (event) => {\n            if (event.keyCode === 13) {\n                this._logConsole.activate();\n            }\n        };\n        this._id = `level-${UUID.uuid4()}`;\n        this.addClass('jp-LogConsole-toolbarLogLevel');\n        this._logConsole = widget;\n        this._logConsole.logger.level = 'debug';\n        if (widget.source) {\n            this.update();\n        }\n        widget.sourceChanged.connect(this._updateSource, this);\n    }\n    _updateSource(sender, { oldValue, newValue }) {\n        // Transfer stateChanged handler to new source logger\n        if (oldValue !== null) {\n            const logger = sender.loggerRegistry.getLogger(oldValue);\n            logger.stateChanged.disconnect(this.update, this);\n        }\n        if (newValue !== null) {\n            const logger = sender.loggerRegistry.getLogger(newValue);\n            logger.stateChanged.connect(this.update, this);\n        }\n        this.update();\n    }\n    render() {\n        const logger = this._logConsole.logger;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"label\", { htmlFor: this._id, className: logger === null\n                    ? 'jp-LogConsole-toolbarLogLevel-disabled'\n                    : undefined }, \"Log Level:\"),\n            React.createElement(HTMLSelect, { id: this._id, className: \"jp-LogConsole-toolbarLogLevelDropdown\", onChange: this.handleChange, onKeyDown: this.handleKeyDown, value: logger === null || logger === void 0 ? void 0 : logger.level, \"aria-label\": \"Log level\", disabled: logger === null, options: logger === null\n                    ? []\n                    : [\n                        'Critical',\n                        'Error',\n                        'Warning',\n                        'Info',\n                        'Debug'\n                    ].map(label => ({ label, value: label.toLowerCase() })) })));\n    }\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 630 630\\\">\\n<rect width=\\\"630\\\" height=\\\"630\\\" fill=\\\"#f7df1e\\\"/>\\n<path d=\\\"m423.2 492.19c12.69 20.72 29.2 35.95 58.4 35.95 24.53 0 40.2-12.26 40.2-29.2 0-20.3-16.1-27.49-43.1-39.3l-14.8-6.35c-42.72-18.2-71.1-41-71.1-89.2 0-44.4 33.83-78.2 86.7-78.2 37.64 0 64.7 13.1 84.2 47.4l-46.1 29.6c-10.15-18.2-21.1-25.37-38.1-25.37-17.34 0-28.33 11-28.33 25.37 0 17.76 11 24.95 36.4 35.95l14.8 6.34c50.3 21.57 78.7 43.56 78.7 93 0 53.3-41.87 82.5-98.1 82.5-54.98 0-90.5-26.2-107.88-60.54zm-209.13 5.13c9.3 16.5 17.76 30.45 38.1 30.45 19.45 0 31.72-7.61 31.72-37.2v-201.3h59.2v202.1c0 61.3-35.94 89.2-88.4 89.2-47.4 0-74.85-24.53-88.81-54.075z\\\"/>\\n</svg>\";"],"sourceRoot":""}