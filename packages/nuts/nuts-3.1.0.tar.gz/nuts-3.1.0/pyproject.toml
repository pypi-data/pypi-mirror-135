[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "nuts"
version = "3.1.0"
description = "Network Unit Testing System Component of NetTowel"
authors = ["Lukas Murer, MÃ©line Sieber, Urs Baumann, Matthias Gabriel, Florian Bruhin", "Marco Martinez", "Severin Grimm"]
maintainers = ["Lukas Murer <lukas.murer@ost.ch>", "Florian Bruhin <florian.bruhin@ost.ch>"]
classifiers = ["Framework :: Pytest", "Topic :: System :: Networking"]
homepage = "https://github.com/INSRapperswil/Nuts"
repository = "https://github.com/INSRapperswil/Nuts"
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.7"
pytest = "^6.1.1"
PyYAML = "^5.3.1"
nornir = "^3.0.0"
nornir-napalm = "^0.1.1"
nornir-netmiko = "^0.1.1"
nornir-utils = "^0.1.0"

[tool.poetry.dev-dependencies]
tox = "^3.24.4"
pytest-cov = "^2.10.1"
black = "^20.8b1"
sphinx = "^1.8.5"
mypy = "^0.812"
flake8 = "^3.9.2"
types-PyYAML = "^6.0.1"
types-setuptools = "^57.4.2"
types-toml = "^0.10.1"


[tool.poetry.plugins."pytest11"]
"nuts"="nuts.plugin"
# why "pytest11": https://github.com/pytest-dev/pytest/commit/ed03eef81b220199a819632a27f9c452b8e1fb81
# https://docs.pytest.org/en/latest/how-to/writing_plugins.html#making-your-plugin-installable-by-others

[tool.black]
line-length = 88

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "error",
    "ignore:Using or importing the ABCs from 'collections':DeprecationWarning:napalm\\.base\\.helpers",
    "ignore:Using or importing the ABCs from 'collections':DeprecationWarning:jnpr\\.junos\\.factcache",
    "ignore:NutsYamlFile\\.fspath is deprecated and will be replaced by NutsYamlFile\\.path\\.",
]
markers = [
    "nuts_test_ctx: A NutsContext to be used in tests."
]

[tool.mypy]
python_version = 3.7

### --strict
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
# disallow_untyped_calls = true
# disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
# no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
# warn_return_any = true
# no_implicit_reexport = true
# strict_equality = true

### Other strictness flags
warn_unreachable = true
disallow_any_unimported = true

### Output
show_error_codes = true
show_error_context = true
pretty = true

[[tool.mypy.overrides]]
module = "ruamel.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]

module = "nornir_napalm.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "nornir_netmiko.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "napalm.*"
ignore_missing_imports = true


[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py,black,mypy,flake8,docs
testpaths = "tests"

[testenv]
description = Run pytest and generate report
deps =
    pytest >= 6.1.1
    pytest-cov >= 2.10.1
commands = pytest {posargs} --junitxml=test-reports/pytest.xml --cov="{envsitepackagesdir}/nuts" --cov=tests --cov-report xml:test-reports/coverage.xml
# envsitepackagesdir see: https://tox.readthedocs.io/en/latest/example/pytest.html


[testenv:black]
description = Check formatting with black
skip_install = true
deps = black >= 20.8b1
commands = black --check {posargs} .

[testenv:mypy]
description = Check typing with mypy
deps = mypy >= 0.812
       types-PyYAML >= 6.0.1
passenv = TERM
commands = mypy {posargs} nuts tests

[testenv:docs]
description = Build docs with sphinx
deps = sphinx >= 4.3.0
changedir = docs/
commands = sphinx-build {posargs} source build

[testenv:flake8]
description = Enforce style with Flake8
deps = flake8 >= 3.9.2
commands = flake8 --max-line-length 88 nuts/ tests/

[testenv:pytest-main]
description = Run project tests against pytest-main branch
deps =
    git+https://github.com/pytest-dev/pytest.git#main
    pytest-cov >= 2.10.1
commands = pytest {posargs} --junitxml=test-reports/pytest.xml --cov="{envsitepackagesdir}/nuts" --cov=tests --cov-report xml:test-reports/coverage.xml
# envsitepackagesdir see: https://tox.readthedocs.io/en/latest/example/pytest.html

"""

