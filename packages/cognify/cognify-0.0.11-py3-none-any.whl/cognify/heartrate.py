# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/07_heartrate.ipynb (unless otherwise specified).

__all__ = ['get_hr']

# Cell
import datetime as dt
import matplotlib
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
import heartpy as hp
from heartpy.peakdetection import make_windows

from .dataset import *


# Cell
def get_hr(metric_id, channel=0, segment_width = 30, segment_overlap = 0,sample_rate=32,replace_outliers=True, outlier_method='z-score'):

    ppg = get_ppg(metric_id)
    ch_names = ['infrared'] if len(ppg['channel'].unique()) == 1 else ['ambient','infrared','red']
    ppg_df = biometric_to_df(ppg,ch_names)

    if ppg_df is None:
        return None
    sample_rate = ppg.sampling_rate[0]


    filtered = hp.filter_signal(ppg_df.T, [0.5, 1.5], sample_rate=sample_rate,
                                order=5, filtertype='bandpass').T
    #select a channel
    hr_data = filtered[:,channel]

    working_data, measures = hp.process_segmentwise(hr_data, sample_rate, segment_width, segment_overlap, replace_outliers, outlier_method)
    total_indices = np.mean(make_windows(hr_data, sample_rate, segment_width, segment_overlap, min_size = 20),1)
    timestamps = ppg_df.index[np.mean(measures['segment_indices'],1).astype(int)]
    print('Total:',len(total_indices),'Retained:',len(timestamps),'Skipped indices:',len(total_indices)-len(timestamps))
    hr_df = pd.DataFrame(data={'timestamp':timestamps,'hr':measures['bpm']})
    return hr_df
