(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[6256],{86256:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>w});var o=t(21483),r=t(30603),a=t(14433),s=t(11186),l=t(31465),c=t(95051),i=t(53110),d=t(16564),u=t(89959),p=t(43821),m=t(60699),g=t(81734),b=t(55147),C=t(18108),k=t(2383);const h={id:"@jupyterlab/console-extension:foreign",requires:[s.IConsoleTracker,u.ISettingRegistry,p.ITranslator],optional:[r.ICommandPalette],activate:function(e,n,t,o,r){const a=o.load("jupyterlab"),{shell:l}=e;n.widgetAdded.connect(((e,n)=>{const o=n.console,r=new s.ForeignHandler({sessionContext:o.sessionContext,parent:o});f.foreignHandlerProperty.set(o,r),t.get("@jupyterlab/console-extension:tracker","showAllKernelActivity").then((({composite:e})=>{const n=e;r.enabled=n})),o.disposed.connect((()=>{r.dispose()}))}));const{commands:c}=e,i=a.__("Console"),d="console:toggle-show-all-kernel-activity";c.addCommand(d,{label:e=>a.__("Show All Kernel Activity"),execute:e=>{const t=function(e){const t=n.currentWidget;return!1!==e.activate&&t&&l.activateById(t.id),t}(e);if(!t)return;const o=f.foreignHandlerProperty.get(t.console);o&&(o.enabled=!o.enabled)},isToggled:()=>{var e;return null!==n.currentWidget&&!!(null===(e=f.foreignHandlerProperty.get(n.currentWidget.console))||void 0===e?void 0:e.enabled)},isEnabled:()=>null!==n.currentWidget&&n.currentWidget===l.currentWidget}),r&&r.addItem({command:d,category:i,args:{isPalette:!0}})},autoStart:!0};var f,v;!function(e){e.foreignHandlerProperty=new k.AttachedProperty({name:"foreignHandler",create:()=>{}})}(f||(f={})),function(e){e.autoClosingBrackets="console:toggle-autoclosing-brackets",e.create="console:create",e.clear="console:clear",e.runUnforced="console:run-unforced",e.runForced="console:run-forced",e.linebreak="console:linebreak",e.interrupt="console:interrupt-kernel",e.restart="console:restart-kernel",e.closeAndShutdown="console:close-and-shutdown",e.open="console:open",e.inject="console:inject",e.changeKernel="console:change-kernel",e.getKernel="console:get-kernel",e.enterToExecute="console:enter-to-execute",e.shiftEnterToExecute="console:shift-enter-to-execute",e.interactionMode="console:interaction-mode",e.replaceSelection="console:replace-selection",e.shutdown="console:shutdown"}(v||(v={}));const y={id:"@jupyterlab/console-extension:tracker",provides:s.IConsoleTracker,requires:[s.ConsolePanel.IContentFactory,a.IEditorServices,d.IRenderMimeRegistry,u.ISettingRegistry,p.ITranslator],optional:[o.ILayoutRestorer,l.IFileBrowserFactory,i.IMainMenu,r.ICommandPalette,c.ILauncher,o.ILabStatus,r.ISessionContextDialogs],activate:async function(e,n,t,o,a,l,c,i,d,u,p,k,h){const f=l.load("jupyterlab"),y=e.serviceManager,{commands:w,shell:_}=e,x=f.__("Console");h=null!=h?h:r.sessionContextDialogs;const S=new r.WidgetTracker({namespace:"console"});async function E(e){var r;await y.ready;const c=new s.ConsolePanel(Object.assign({manager:y,contentFactory:n,mimeTypeService:t.mimeTypeService,rendermime:o,translator:l,setBusy:null!==(r=k&&(()=>k.setBusy()))&&void 0!==r?r:void 0},e)),i=(await a.get("@jupyterlab/console-extension:tracker","interactionMode")).composite;return c.console.node.dataset.jpInteractionMode=i,await S.add(c),c.sessionContext.propertyChanged.connect((()=>{S.save(c)})),_.add(c,"main",{ref:e.ref,mode:e.insertMode,activate:!1!==e.activate}),c}c&&c.restore(S,{command:v.create,args:e=>{const{path:n,name:t,kernelPreference:o}=e.console.sessionContext;return{path:n,name:t,kernelPreference:Object.assign({},o)}},name:e=>{var n;return null!==(n=e.console.sessionContext.path)&&void 0!==n?n:b.UUID.uuid4()},when:y.ready}),p&&y.ready.then((()=>{let e=null;const n=()=>{e&&(e.dispose(),e=null);const n=y.kernelspecs.specs;if(n){e=new C.DisposableSet;for(const t in n.kernelspecs){const o=t===n.default?0:1/0,r=n.kernelspecs[t];let a=r.resources["logo-64x64"];e.add(p.add({command:v.create,args:{isLauncher:!0,kernelPreference:{name:t}},category:f.__("Console"),rank:o,kernelIconUrl:a,metadata:{kernel:b.JSONExt.deepCopy(r.metadata||{})}}))}}};n(),y.kernelspecs.specsChanged.connect(n)}));const I=(e,n,t)=>{if(void 0!==n[t])switch(t){case"autoClosingBrackets":e.setOption("autoClosingBrackets",n.autoClosingBrackets);break;case"cursorBlinkRate":e.setOption("cursorBlinkRate",n.cursorBlinkRate);break;case"fontFamily":e.setOption("fontFamily",n.fontFamily);break;case"fontSize":e.setOption("fontSize",n.fontSize);break;case"lineHeight":e.setOption("lineHeight",n.lineHeight);break;case"lineNumbers":e.setOption("lineNumbers",n.lineNumbers);break;case"lineWrap":e.setOption("lineWrap",n.lineWrap);break;case"matchBrackets":e.setOption("matchBrackets",n.matchBrackets);break;case"readOnly":e.setOption("readOnly",n.readOnly);break;case"insertSpaces":e.setOption("insertSpaces",n.insertSpaces);break;case"tabSize":e.setOption("tabSize",n.tabSize);break;case"wordWrapColumn":e.setOption("wordWrapColumn",n.wordWrapColumn);break;case"rulers":e.setOption("rulers",n.rulers);break;case"codeFolding":e.setOption("codeFolding",n.codeFolding)}},B="@jupyterlab/console-extension:tracker";let P,O;async function M(e){P=(await a.get(B,"interactionMode")).composite,O=(await a.get(B,"promptCellConfig")).composite;const n=e=>{var n,t,o;e.console.node.dataset.jpInteractionMode=P,t=null===(n=e.console.promptCell)||void 0===n?void 0:n.editor,o=O,void 0!==t&&(I(t,o,"autoClosingBrackets"),I(t,o,"cursorBlinkRate"),I(t,o,"fontFamily"),I(t,o,"fontSize"),I(t,o,"lineHeight"),I(t,o,"lineNumbers"),I(t,o,"lineWrap"),I(t,o,"matchBrackets"),I(t,o,"readOnly"),I(t,o,"insertSpaces"),I(t,o,"tabSize"),I(t,o,"wordWrapColumn"),I(t,o,"rulers"),I(t,o,"codeFolding"))};e?n(e):S.forEach(n)}function F(){return null!==S.currentWidget&&S.currentWidget===_.currentWidget}a.pluginChanged.connect(((e,n)=>{n===B&&M()})),await M(),S.widgetAdded.connect(((e,n)=>{M(n)})),w.addCommand(v.autoClosingBrackets,{execute:async e=>{var n;O.autoClosingBrackets=!!(null!==(n=e.force)&&void 0!==n?n:!O.autoClosingBrackets),await a.set(B,"promptCellConfig",O)},label:f.__("Auto Close Brackets for Code Console Prompt"),isToggled:()=>O.autoClosingBrackets});let W=v.open;function j(e){const n=S.currentWidget;return!1!==e.activate&&n&&_.activateById(n.id),null!=n?n:null}w.addCommand(W,{execute:e=>{const n=e.path,t=S.find((e=>{var t;return(null===(t=e.console.sessionContext.session)||void 0===t?void 0:t.path)===n}));return t?(!1!==e.activate&&_.activateById(t.id),t):y.ready.then((()=>(0,g.find)(y.sessions.running(),(e=>e.path===n))?E(e):Promise.reject(`No running kernel session for path: ${n}`)))}}),W=v.create,w.addCommand(W,{label:e=>{var n,t,o,r;if(e.isPalette)return f.__("New Console");if(e.isLauncher&&e.kernelPreference){const a=e.kernelPreference;return null!==(r=null===(o=null===(t=null===(n=y.kernelspecs)||void 0===n?void 0:n.specs)||void 0===t?void 0:t.kernelspecs[a.name||""])||void 0===o?void 0:o.display_name)&&void 0!==r?r:""}return f.__("Console")},icon:e=>e.isPalette?void 0:m.consoleIcon,execute:e=>{var n;const t=null!==(n=e.basePath||e.cwd||(null==i?void 0:i.defaultBrowser.model.path))&&void 0!==n?n:"";return E(Object.assign({basePath:t},e))}}),w.addCommand(v.clear,{label:f.__("Clear Console Cells"),execute:e=>{const n=j(e);n&&n.console.clear()},isEnabled:F}),w.addCommand(v.runUnforced,{label:f.__("Run Cell (unforced)"),execute:e=>{const n=j(e);if(n)return n.console.execute()},isEnabled:F}),w.addCommand(v.runForced,{label:f.__("Run Cell (forced)"),execute:e=>{const n=j(e);if(n)return n.console.execute(!0)},isEnabled:F}),w.addCommand(v.linebreak,{label:f.__("Insert Line Break"),execute:e=>{const n=j(e);n&&n.console.insertLinebreak()},isEnabled:F}),w.addCommand(v.replaceSelection,{label:f.__("Replace Selection in Console"),execute:e=>{const n=j(e);if(!n)return;const t=e.text||"";n.console.replaceSelection(t)},isEnabled:F}),w.addCommand(v.interrupt,{label:f.__("Interrupt Kernel"),execute:e=>{var n;const t=j(e);if(!t)return;const o=null===(n=t.console.sessionContext.session)||void 0===n?void 0:n.kernel;return o?o.interrupt():void 0},isEnabled:F}),w.addCommand(v.restart,{label:f.__("Restart Kernel…"),execute:e=>{const n=j(e);if(n)return h.restart(n.console.sessionContext,l)},isEnabled:F}),w.addCommand(v.shutdown,{label:f.__("Shut Down"),execute:e=>{const n=j(e);if(n)return n.console.sessionContext.shutdown()}}),w.addCommand(v.closeAndShutdown,{label:f.__("Close and Shut Down…"),execute:e=>{const n=j(e);if(n)return(0,r.showDialog)({title:f.__("Shut down the console?"),body:f.__('Are you sure you want to close "%1"?',n.title.label),buttons:[r.Dialog.cancelButton(),r.Dialog.warnButton()]}).then((e=>!!e.button.accept&&w.execute(v.shutdown,{activate:!1}).then((()=>(n.dispose(),!0)))))},isEnabled:F}),w.addCommand(v.inject,{execute:e=>{const n=e.path;S.find((t=>{var o;return(null===(o=t.console.sessionContext.session)||void 0===o?void 0:o.path)===n&&(!1!==e.activate&&_.activateById(t.id),t.console.inject(e.code,e.metadata),!0)}))},isEnabled:F}),w.addCommand(v.changeKernel,{label:f.__("Change Kernel…"),execute:e=>{const n=j(e);if(n)return h.selectKernel(n.console.sessionContext,l)},isEnabled:F}),w.addCommand(v.getKernel,{label:f.__("Get Kernel"),execute:e=>{var n;const t=j(Object.assign({activate:!1},e));if(t)return null===(n=t.sessionContext.session)||void 0===n?void 0:n.kernel},isEnabled:F}),u&&[v.create,v.linebreak,v.clear,v.runUnforced,v.runForced,v.restart,v.interrupt,v.changeKernel,v.closeAndShutdown].forEach((e=>{u.addItem({command:e,category:x,args:{isPalette:!0}})})),d&&(d.fileMenu.closeAndCleaners.add({id:v.closeAndShutdown,isEnabled:F}),d.kernelMenu.kernelUsers.changeKernel.add({id:v.changeKernel,isEnabled:F}),d.kernelMenu.kernelUsers.clearWidget.add({id:v.clear,isEnabled:F}),d.kernelMenu.kernelUsers.interruptKernel.add({id:v.interrupt,isEnabled:F}),d.kernelMenu.kernelUsers.restartKernel.add({id:v.restart,isEnabled:F}),d.kernelMenu.kernelUsers.shutdownKernel.add({id:v.shutdown,isEnabled:F}),d.runMenu.codeRunners.run.add({id:v.runForced,isEnabled:F}),d.editMenu.clearers.clearCurrent.add({id:v.clear,isEnabled:F}),d.helpMenu.getKernel.add({id:v.getKernel,isEnabled:F}));const K={notebook:f.__("Execute with Shift+Enter"),terminal:f.__("Execute with Enter")};return w.addCommand(v.interactionMode,{label:e=>K[e.interactionMode]||"",execute:async e=>{try{await a.set(B,"interactionMode",e.interactionMode)}catch(e){console.error(`Failed to set ${B}:keyMap - ${e.message}`)}},isToggled:e=>e.interactionMode===P}),S},autoStart:!0},w=[{id:"@jupyterlab/console-extension:factory",provides:s.ConsolePanel.IContentFactory,requires:[a.IEditorServices],autoStart:!0,activate:(e,n)=>{const t=n.factoryService.newInlineEditor;return new s.ConsolePanel.ContentFactory({editorFactory:t})}},y,h]}}]);