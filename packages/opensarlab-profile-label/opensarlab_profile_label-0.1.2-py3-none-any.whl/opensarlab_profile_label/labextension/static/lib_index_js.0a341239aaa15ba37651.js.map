{"version":3,"file":"lib_index_js.0a341239aaa15ba37651.js","mappings":";;;;;;;;;;;;;;;;;AAA+C;AACS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kDAAkD;AACzD;AACA,qBAAqB,+EAA6B;AAClD,uBAAuB,8DAAW;AAClC;AACA;AACA;AACA,yBAAyB,8EAA4B;AACrD;AACA;AACA,kBAAkB,+EAA6B;AAC/C;AACA;AACA;AACA,kBAAkB,gFAA8B;AAChD;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1B4C;AACH;AACF;AACvC,2CAA2C,mDAAM;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,sDAAO;AACtB;AACA;AACA;AACA,yBAAyB,oDAAU;AACnC;AACA;AACA;AACA,+FAA+F,OAAO;AACtG;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,kCAAkC,EAAC","sources":["webpack://opensarlab-profile-label/./lib/handler.js","webpack://opensarlab-profile-label/./lib/index.js"],"sourcesContent":["import { URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\n/**\n * Call the API extension\n *\n * @param endPoint API REST end point for the extension\n * @param init Initial values for the request\n * @returns The response body interpreted as JSON\n */\nexport async function requestAPI(endPoint = '', init = {}) {\n    // Make request to Jupyter API\n    const settings = ServerConnection.makeSettings();\n    const requestUrl = URLExt.join(settings.baseUrl, 'opensarlab-profile-label', // API Namespace\n    endPoint);\n    let response;\n    try {\n        response = await ServerConnection.makeRequest(requestUrl, init, settings);\n    }\n    catch (error) {\n        throw new ServerConnection.NetworkError(error);\n    }\n    const data = await response.json();\n    if (!response.ok) {\n        throw new ServerConnection.ResponseError(response, data.message);\n    }\n    return data;\n}\n","import { ITopBar } from 'jupyterlab-topbar';\nimport { Widget } from '@lumino/widgets';\nimport { requestAPI } from './handler';\nclass OpensarlabProfileLabelWidget extends Widget {\n    constructor() {\n        super();\n        this.span = document.createElement('span');\n        this.addClass('opensarlab-profile-label-widget');\n        this.node.appendChild(this.span);\n    }\n}\nconst opensarlab_profile_label_extension = {\n    id: 'jupyterlab-topbar-opensarlab-profile-label',\n    autoStart: true,\n    requires: [ITopBar],\n    activate: async (app, topBar) => {\n        let data = null;\n        try {\n            data = await requestAPI('opensarlab-profile-label');\n            console.log(data);\n        }\n        catch (reason) {\n            console.error(`Error on GET /opensarlab-profile-label/opensarlab-profile-label.\\n${reason}`);\n        }\n        const opensarlabProfileLabelWidget = new OpensarlabProfileLabelWidget();\n        opensarlabProfileLabelWidget.span.innerText = data['data'];\n        topBar.addItem('opensarlab_profile_label', opensarlabProfileLabelWidget);\n    }\n};\nexport default opensarlab_profile_label_extension;\n"],"names":[],"sourceRoot":""}