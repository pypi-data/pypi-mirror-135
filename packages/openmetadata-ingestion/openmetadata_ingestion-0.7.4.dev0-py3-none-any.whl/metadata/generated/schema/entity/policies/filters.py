# generated by datamodel-codegen:
#   filename:  schema/entity/policies/filters.json
#   timestamp: 2022-01-16T19:33:03+00:00

from __future__ import annotations

from typing import Any, List, Union

from pydantic import BaseModel, Field

from ...type import tagLabel


class Filters(BaseModel):
    __root__: Any = Field(..., title='Filters')


class Prefix(BaseModel):
    __root__: str = Field(..., description='Prefix path of the entity.')


class Regex(BaseModel):
    __root__: str = Field(..., description='Regex that matches the entity.')


class Filters1(BaseModel):
    __root__: List[Union[Prefix, Regex, tagLabel.TagLabel]] = Field(
        ...,
        description='The set of filters that are used to match on entities. A logical AND operation is applied across all filters.',
        min_items=1,
    )
