[tox]
envlist =
    clean
    build
    tests
    lint
    docs
isolated_build = true
minversion = 3.15

[testenv]
description = Invoke pytest to run automated tests
passenv =
    HOME
setenv =
    TOXINIDIR = {toxinidir}
extras =
    testing
commands =
    pytest -n auto {posargs}

[testenv:{build,clean,sdist}]
description =
    build: Build the package in isolation according to PEP517, see https://github.com/pypa/build
    sdist: Build an sdist package in isolation
    clean: Remove old distribution files and temporary build artifacts (./build and ./dist)
skip_install = true
deps =
    build: build[virtualenv]
    sdist: build[virtualenv]
changedir = {toxinidir}
commands =
    clean: python -c 'from shutil import rmtree; rmtree("build", True); rmtree("dist", True)'
    build: python -m build -w .
    sdist: python -m build -s .

[testenv:{docs,doctests,linkcheck}]
description =
    docs: Invoke sphinx-build to build the docs
    doctests: Invoke sphinx-build to run doctests
    linkcheck: Check for broken links in the documentation
setenv =
    BUILDDIR = {toxinidir}/docs/_build
    DOCSDIR = {toxinidir}/docs
    docs: BUILD = html
    doctests: BUILD = doctest
    linkcheck: BUILD = linkcheck
deps =
    -r{toxinidir}/docs/requirements.txt
extras =
    testing
commands =
    sphinx-build --color -b {env:BUILD} -d "{env:BUILDDIR}/doctrees" "{env:DOCSDIR}" "{env:BUILDDIR}/{env:BUILD}" {posargs}

[testenv:publish]
description =
    Publish the package you have been developing to a package index server.
    By default, it uses testpypi. If you really want to publish your package
    to be publicly accessible in PyPI, use the `-- --repository pypi` option.
passenv =
    TWINE_PASSWORD
    TWINE_REPOSITORY
    TWINE_USERNAME
skip_install = true
deps =
    twine
changedir = {toxinidir}
commands =
    python -m twine check dist/*
    python -m twine upload {posargs:--repository testpypi} dist/*

[testenv:{lint,pep8}]
description =
    Run style checks.
deps =
    autopep8
    flake8
commands =
    autopep8 --exit-code --max-line-length=79 --diff -r {posargs:src arbiterd_tests}
    flake8 {posargs:src arbiterd_tests}

[testenv:{fix-lint,autopep8}]
deps =
    autopep8
commands =
    autopep8 --max-line-length=79 --in-place -r {posargs:src arbiterd_tests}

[gh-actions]
python =
    3.8: clean, build, tests, lint, docs
    3.9: tests

[flake8]
max_line_length = 79
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
